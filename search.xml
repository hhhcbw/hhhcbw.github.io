<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Leetcode528.按权重随机选择</title>
      <link href="/2021/11/06/Leetcode528/"/>
      <url>/2021/11/06/Leetcode528/</url>
      
        <content type="html"><![CDATA[<h1 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a>题目链接</h1><p><a href="https://leetcode-cn.com/problems/random-pick-with-weight/">点我(^_^)</a></p><h1 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h1><p><code>w</code>数组为权重数组，我们随机选择下标<code>i</code>，按权重比 <code>w[i]/total</code>，<code>total</code>为<code>w</code>数组权重之和。</p><h1 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h1><span id="more"></span><p>我们可以预处理出一个 <code>w</code>数组的前缀和数组 <code>pre</code>，然后随机从 <code>[0,total)</code> 中随机选择一个数，然后二分找到前缀和中，最小的大于选择的这个数的下标，这样随机选择就是按权重选择的。预处理前缀和数组时间复杂度<code>O(n)</code>，二分查找时间复杂度 <code>O(logn)</code>。</p><h1 id="具体代码"><a href="#具体代码" class="headerlink" title="具体代码"></a>具体代码</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"></span><br><span class="line">    vector&lt;<span class="keyword">int</span>&gt; pre;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">Solution</span>(vector&lt;<span class="keyword">int</span>&gt;&amp; w) &#123;</span><br><span class="line">        pre.<span class="built_in">clear</span>();</span><br><span class="line">        pre.<span class="built_in">push_back</span>(w[<span class="number">0</span>]);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;w.<span class="built_in">size</span>(); ++i)</span><br><span class="line">            pre.<span class="built_in">push_back</span>(pre[i<span class="number">-1</span>]+w[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">pickIndex</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">upper_bound</span>(pre.<span class="built_in">begin</span>(),pre.<span class="built_in">end</span>(),<span class="built_in">rand</span>()%pre[pre.<span class="built_in">size</span>()<span class="number">-1</span>])-pre.<span class="built_in">begin</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Your Solution object will be instantiated and called as such:</span></span><br><span class="line"><span class="comment"> * Solution* obj = new Solution(w);</span></span><br><span class="line"><span class="comment"> * int param_1 = obj-&gt;pickIndex();</span></span><br><span class="line"><span class="comment"> */</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 力扣刷题笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
            <tag> 二分 </tag>
            
            <tag> 前缀和 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaWeb书城项目(五)———图书模块</title>
      <link href="/2021/11/05/JavaWeb_BookProject_5/"/>
      <url>/2021/11/05/JavaWeb_BookProject_5/</url>
      
        <content type="html"><![CDATA[<blockquote><p>前四个阶段我们完成了用户的注册与登录功能，并对代码进行了优化，第五阶段我们完成书城项目的图书模块，属于后台管理中的图书管理功能，主要包括图书的添加，删除，修改以及显示。</p></blockquote><h1 id="数据库表"><a href="#数据库表" class="headerlink" title="数据库表"></a>数据库表</h1><p>首先编写图书模块的数据库表，使用如下<code>Sql</code>语句创建<code>t_book</code>表，并插入初始化测试数据。</p><span id="more"></span><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> t_book(</span><br><span class="line">`id` <span class="type">int</span>(<span class="number">11</span>) <span class="keyword">primary</span> key auto_increment, ## 主键</span><br><span class="line">`name` <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">not</span> <span class="keyword">null</span>,## 书名 </span><br><span class="line">`author` <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">not</span> <span class="keyword">null</span>,## 作者</span><br><span class="line">`price` <span class="type">decimal</span>(<span class="number">11</span>,<span class="number">2</span>) <span class="keyword">not</span> <span class="keyword">null</span>,## 价格</span><br><span class="line">`sales` <span class="type">int</span>(<span class="number">11</span>) <span class="keyword">not</span> <span class="keyword">null</span>,## 销量</span><br><span class="line">`stock` <span class="type">int</span>(<span class="number">11</span>) <span class="keyword">not</span> <span class="keyword">null</span>,## 库存</span><br><span class="line">`img_path` <span class="type">varchar</span>(<span class="number">200</span>) <span class="keyword">not</span> <span class="keyword">null</span>## 书的图片路径</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">## 插入初始化测试数据</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> t_book(`id` , `name` , `author` , `price` , `sales` , `stock` , `img_path`) </span><br><span class="line"><span class="keyword">values</span>(<span class="keyword">null</span> , <span class="string">&#x27;java从入门到放弃&#x27;</span> , <span class="string">&#x27;国哥&#x27;</span> , <span class="number">80</span> , <span class="number">9999</span> , <span class="number">9</span> , <span class="string">&#x27;static/img/default.jpg&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> t_book(`id` , `name` , `author` , `price` , `sales` , `stock` , `img_path`) </span><br><span class="line"><span class="keyword">values</span>(<span class="keyword">null</span> , <span class="string">&#x27;数据结构与算法&#x27;</span> , <span class="string">&#x27;严敏君&#x27;</span> , <span class="number">78.5</span> , <span class="number">6</span> , <span class="number">13</span> , <span class="string">&#x27;static/img/default.jpg&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> t_book(`id` , `name` , `author` , `price` , `sales` , `stock` , `img_path`) </span><br><span class="line"><span class="keyword">values</span>(<span class="keyword">null</span> , <span class="string">&#x27;怎样拐跑别人的媳妇&#x27;</span> , <span class="string">&#x27;龙伍&#x27;</span> , <span class="number">68</span>, <span class="number">99999</span> , <span class="number">52</span> , <span class="string">&#x27;static/img/default.jpg&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> t_book(`id` , `name` , `author` , `price` , `sales` , `stock` , `img_path`) </span><br><span class="line"><span class="keyword">values</span>(<span class="keyword">null</span> , <span class="string">&#x27;木虚肉盖饭&#x27;</span> , <span class="string">&#x27;小胖&#x27;</span> , <span class="number">16</span>, <span class="number">1000</span> , <span class="number">50</span> , <span class="string">&#x27;static/img/default.jpg&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> t_book(`id` , `name` , `author` , `price` , `sales` , `stock` , `img_path`) </span><br><span class="line"><span class="keyword">values</span>(<span class="keyword">null</span> , <span class="string">&#x27;C++编程思想&#x27;</span> , <span class="string">&#x27;刚哥&#x27;</span> , <span class="number">45.5</span> , <span class="number">14</span> , <span class="number">95</span> , <span class="string">&#x27;static/img/default.jpg&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> t_book(`id` , `name` , `author` , `price` , `sales` , `stock` , `img_path`) </span><br><span class="line"><span class="keyword">values</span>(<span class="keyword">null</span> , <span class="string">&#x27;蛋炒饭&#x27;</span> , <span class="string">&#x27;周星星&#x27;</span> , <span class="number">9.9</span>, <span class="number">12</span> , <span class="number">53</span> , <span class="string">&#x27;static/img/default.jpg&#x27;</span>);</span><br><span class="line"> </span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> t_book(`id` , `name` , `author` , `price` , `sales` , `stock` , `img_path`) </span><br><span class="line"><span class="keyword">values</span>(<span class="keyword">null</span> , <span class="string">&#x27;赌神&#x27;</span> , <span class="string">&#x27;龙伍&#x27;</span> , <span class="number">66.5</span>, <span class="number">125</span> , <span class="number">535</span> , <span class="string">&#x27;static/img/default.jpg&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> t_book(`id` , `name` , `author` , `price` , `sales` , `stock` , `img_path`) </span><br><span class="line"><span class="keyword">values</span>(<span class="keyword">null</span> , <span class="string">&#x27;Java编程思想&#x27;</span> , <span class="string">&#x27;阳哥&#x27;</span> , <span class="number">99.5</span> , <span class="number">47</span> , <span class="number">36</span> , <span class="string">&#x27;static/img/default.jpg&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> t_book(`id` , `name` , `author` , `price` , `sales` , `stock` , `img_path`) </span><br><span class="line"><span class="keyword">values</span>(<span class="keyword">null</span> , <span class="string">&#x27;JavaScript从入门到精通&#x27;</span> , <span class="string">&#x27;婷姐&#x27;</span> , <span class="number">9.9</span> , <span class="number">85</span> , <span class="number">95</span> , <span class="string">&#x27;static/img/default.jpg&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> t_book(`id` , `name` , `author` , `price` , `sales` , `stock` , `img_path`) </span><br><span class="line"><span class="keyword">values</span>(<span class="keyword">null</span> , <span class="string">&#x27;cocos2d-x游戏编程入门&#x27;</span> , <span class="string">&#x27;国哥&#x27;</span> , <span class="number">49</span>, <span class="number">52</span> , <span class="number">62</span> , <span class="string">&#x27;static/img/default.jpg&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> t_book(`id` , `name` , `author` , `price` , `sales` , `stock` , `img_path`) </span><br><span class="line"><span class="keyword">values</span>(<span class="keyword">null</span> , <span class="string">&#x27;C语言程序设计&#x27;</span> , <span class="string">&#x27;谭浩强&#x27;</span> , <span class="number">28</span> , <span class="number">52</span> , <span class="number">74</span> , <span class="string">&#x27;static/img/default.jpg&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> t_book(`id` , `name` , `author` , `price` , `sales` , `stock` , `img_path`) </span><br><span class="line"><span class="keyword">values</span>(<span class="keyword">null</span> , <span class="string">&#x27;Lua语言程序设计&#x27;</span> , <span class="string">&#x27;雷丰阳&#x27;</span> , <span class="number">51.5</span> , <span class="number">48</span> , <span class="number">82</span> , <span class="string">&#x27;static/img/default.jpg&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> t_book(`id` , `name` , `author` , `price` , `sales` , `stock` , `img_path`) </span><br><span class="line"><span class="keyword">values</span>(<span class="keyword">null</span> , <span class="string">&#x27;西游记&#x27;</span> , <span class="string">&#x27;罗贯中&#x27;</span> , <span class="number">12</span>, <span class="number">19</span> , <span class="number">9999</span> , <span class="string">&#x27;static/img/default.jpg&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> t_book(`id` , `name` , `author` , `price` , `sales` , `stock` , `img_path`) </span><br><span class="line"><span class="keyword">values</span>(<span class="keyword">null</span> , <span class="string">&#x27;水浒传&#x27;</span> , <span class="string">&#x27;华仔&#x27;</span> , <span class="number">33.05</span> , <span class="number">22</span> , <span class="number">88</span> , <span class="string">&#x27;static/img/default.jpg&#x27;</span>);</span><br><span class="line"> </span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> t_book(`id` , `name` , `author` , `price` , `sales` , `stock` , `img_path`) </span><br><span class="line"><span class="keyword">values</span>(<span class="keyword">null</span> , <span class="string">&#x27;操作系统原理&#x27;</span> , <span class="string">&#x27;刘优&#x27;</span> , <span class="number">133.05</span> , <span class="number">122</span> , <span class="number">188</span> , <span class="string">&#x27;static/img/default.jpg&#x27;</span>);</span><br><span class="line"> </span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> t_book(`id` , `name` , `author` , `price` , `sales` , `stock` , `img_path`) </span><br><span class="line"><span class="keyword">values</span>(<span class="keyword">null</span> , <span class="string">&#x27;数据结构 java版&#x27;</span> , <span class="string">&#x27;封大神&#x27;</span> , <span class="number">173.15</span> , <span class="number">21</span> , <span class="number">81</span> , <span class="string">&#x27;static/img/default.jpg&#x27;</span>);</span><br><span class="line"> </span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> t_book(`id` , `name` , `author` , `price` , `sales` , `stock` , `img_path`) </span><br><span class="line"><span class="keyword">values</span>(<span class="keyword">null</span> , <span class="string">&#x27;UNIX高级环境编程&#x27;</span> , <span class="string">&#x27;乐天&#x27;</span> , <span class="number">99.15</span> , <span class="number">210</span> , <span class="number">810</span> , <span class="string">&#x27;static/img/default.jpg&#x27;</span>);</span><br><span class="line"> </span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> t_book(`id` , `name` , `author` , `price` , `sales` , `stock` , `img_path`) </span><br><span class="line"><span class="keyword">values</span>(<span class="keyword">null</span> , <span class="string">&#x27;javaScript高级编程&#x27;</span> , <span class="string">&#x27;国哥&#x27;</span> , <span class="number">69.15</span> , <span class="number">210</span> , <span class="number">810</span> , <span class="string">&#x27;static/img/default.jpg&#x27;</span>);</span><br><span class="line"> </span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> t_book(`id` , `name` , `author` , `price` , `sales` , `stock` , `img_path`) </span><br><span class="line"><span class="keyword">values</span>(<span class="keyword">null</span> , <span class="string">&#x27;大话设计模式&#x27;</span> , <span class="string">&#x27;国哥&#x27;</span> , <span class="number">89.15</span> , <span class="number">20</span> , <span class="number">10</span> , <span class="string">&#x27;static/img/default.jpg&#x27;</span>);</span><br><span class="line"> </span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> t_book(`id` , `name` , `author` , `price` , `sales` , `stock` , `img_path`) </span><br><span class="line"><span class="keyword">values</span>(<span class="keyword">null</span> , <span class="string">&#x27;人月神话&#x27;</span> , <span class="string">&#x27;刚哥&#x27;</span> , <span class="number">88.15</span> , <span class="number">20</span> , <span class="number">80</span> , <span class="string">&#x27;static/img/default.jpg&#x27;</span>);</span><br></pre></td></tr></table></figure><hr><h1 id="编写图书模块的JavaBean"><a href="#编写图书模块的JavaBean" class="headerlink" title="编写图书模块的JavaBean"></a>编写图书模块的JavaBean</h1><p>我们在<code>pojo</code>目录下创建<code>Book</code>类，它的属性如下，并设置<code>get</code>,<code>set</code>,有参和无参构造方法。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> Integer id;</span><br><span class="line"><span class="keyword">private</span> String name;</span><br><span class="line"><span class="keyword">private</span> String author;</span><br><span class="line"><span class="keyword">private</span> BigDecimal price;</span><br><span class="line"><span class="keyword">private</span> Integer sales;</span><br><span class="line"><span class="keyword">private</span> Integer stock;</span><br><span class="line"><span class="keyword">private</span> String imgPath = <span class="string">&quot;static/img/default.jpg&quot;</span>;</span><br></pre></td></tr></table></figure><p>需要注意的是，对于图片路径<code>imgPath</code>，我们初始化了一个默认图片路径，对于之后修改，如果传入图片路径为<code>null</code>或空串，我们就不对<code>imgPath</code>进行修改，因此我们需要对默认构造方法以及<code>setImgPath</code>方法做出如下修改。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 要求给定的图书封面图片路径不能为空</span></span><br><span class="line">       <span class="keyword">if</span> (imgPath != <span class="keyword">null</span> &amp;&amp; !<span class="string">&quot;&quot;</span>.equals(imgPath)) &#123;</span><br><span class="line">           <span class="keyword">this</span>.imgPath = imgPath;</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure><hr><h1 id="编写图书模块的Dao和测试Dao"><a href="#编写图书模块的Dao和测试Dao" class="headerlink" title="编写图书模块的Dao和测试Dao"></a>编写图书模块的Dao和测试Dao</h1><p><code>Dao</code>接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.atguigu.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.atguigu.pojo.Book;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">BookDao</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">addBook</span><span class="params">(Book book)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">deleteBookById</span><span class="params">(Integer id)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">updateBook</span><span class="params">(Book book)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Book <span class="title">queryBookById</span><span class="params">(Integer id)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Book&gt; <span class="title">queryBooks</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>BookDaoImpl</code>实现类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.atguigu.dao.impl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.atguigu.dao.BookDao;</span><br><span class="line"><span class="keyword">import</span> com.atguigu.pojo.Book;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BookDaoImpl</span> <span class="keyword">extends</span> <span class="title">BaseDao</span> <span class="keyword">implements</span> <span class="title">BookDao</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">addBook</span><span class="params">(Book book)</span> </span>&#123;</span><br><span class="line">        String sql = <span class="string">&quot;insert into t_book(`name`,`author`,`price`,`sales`,`stock`,`img_path`) values(?,?,?,?,?,?)&quot;</span>;</span><br><span class="line">        <span class="keyword">return</span> update(sql,book.getName(),book.getAuthor(),book.getPrice(),book.getSales(),book.getStock(),book.getImgPath());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">deleteBookById</span><span class="params">(Integer id)</span> </span>&#123;</span><br><span class="line">        String sql = <span class="string">&quot;delete from t_book where id = ?&quot;</span>;</span><br><span class="line">        <span class="keyword">return</span> update(sql, id);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">updateBook</span><span class="params">(Book book)</span> </span>&#123;</span><br><span class="line">        String sql = <span class="string">&quot;update t_book set `name`=?,`author`=?,`price`=?,`sales`=?,`stock`=?,`img_path`=? where id=?&quot;</span>;</span><br><span class="line">        <span class="keyword">return</span> update(sql,book.getName(),book.getAuthor(),book.getPrice(),book.getSales(),book.getStock(),book.getImgPath(),book.getId());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Book <span class="title">queryBookById</span><span class="params">(Integer id)</span> </span>&#123;</span><br><span class="line">        String sql = <span class="string">&quot;select `id`,`name`,`author`,`price`,`sales`,`stock`,`img_path` imgPath from t_book where id = ?&quot;</span>;</span><br><span class="line">        <span class="keyword">return</span> queryForOne(Book.class, sql, id);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Book&gt; <span class="title">queryBooks</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        String sql = <span class="string">&quot;select `id`,`name`,`author`,`price`,`sales`,`stock`,`img_path` imgPath from t_book&quot;</span>;</span><br><span class="line">        <span class="keyword">return</span> queryForList(Book.class, sql);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><code>BookDao</code>的测试：<br>我们在<code>test</code>目录下创建<code>BookDaoTest</code>类进行测试。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.atguigu.test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.atguigu.dao.BookDao;</span><br><span class="line"><span class="keyword">import</span> com.atguigu.dao.impl.BookDaoImpl;</span><br><span class="line"><span class="keyword">import</span> com.atguigu.pojo.Book;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.math.BigDecimal;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.junit.Assert.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BookDaoTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> BookDao bookDao = <span class="keyword">new</span> BookDaoImpl();</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addBook</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        bookDao.addBook(<span class="keyword">new</span> Book(<span class="keyword">null</span>, <span class="string">&quot;博文为太帅了&quot;</span>, <span class="string">&quot;博文&quot;</span>, <span class="keyword">new</span> BigDecimal(<span class="number">199999</span>), <span class="number">1100000</span>, <span class="number">0</span>, <span class="keyword">null</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">deleteBookById</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        bookDao.deleteBookById(<span class="number">21</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">updateBook</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        bookDao.updateBook(<span class="keyword">new</span> Book(<span class="number">22</span>, <span class="string">&quot;大家都很帅&quot;</span>, <span class="string">&quot;佳庆&quot;</span>,  <span class="keyword">new</span> BigDecimal(<span class="number">199999</span>), <span class="number">1100000</span>, <span class="number">0</span>, <span class="keyword">null</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">queryBookById</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println( bookDao.queryBookById(<span class="number">21</span>) );</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">queryBooks</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (Book queryBook : bookDao.queryBooks())&#123;</span><br><span class="line">            System.out.println(queryBook);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h1 id="编写图书模块的Service和测试Service"><a href="#编写图书模块的Service和测试Service" class="headerlink" title="编写图书模块的Service和测试Service"></a>编写图书模块的Service和测试Service</h1><p><code>BookService</code>接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.atguigu.pojo.Book;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">BookService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addBook</span><span class="params">(Book book)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">deleteBookById</span><span class="params">(Integer id)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">updateBook</span><span class="params">(Book book)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Book <span class="title">queryBookById</span><span class="params">(Integer id)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Book&gt; <span class="title">queryBooks</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>BookServiceImpl</code>实现类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.atguigu.service.impl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.atguigu.dao.BookDao;</span><br><span class="line"><span class="keyword">import</span> com.atguigu.dao.impl.BookDaoImpl;</span><br><span class="line"><span class="keyword">import</span> com.atguigu.pojo.Book;</span><br><span class="line"><span class="keyword">import</span> com.atguigu.service.BookService;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BookServiceImpl</span> <span class="keyword">implements</span> <span class="title">BookService</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> BookDao bookDao = <span class="keyword">new</span> BookDaoImpl();</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addBook</span><span class="params">(Book book)</span> </span>&#123;</span><br><span class="line">        bookDao.addBook(book);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">deleteBookById</span><span class="params">(Integer id)</span> </span>&#123;</span><br><span class="line">        bookDao.deleteBookById(id);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">updateBook</span><span class="params">(Book book)</span> </span>&#123;</span><br><span class="line">        bookDao.updateBook(book);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Book <span class="title">queryBookById</span><span class="params">(Integer id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> bookDao.queryBookById(id);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Book&gt; <span class="title">queryBooks</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> bookDao.queryBooks();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>BookService</code>的测试：<br>在<code>test</code>目录下创建<code>BookServiceImplTest</code>测试类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.atguigu.test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.atguigu.pojo.Book;</span><br><span class="line"><span class="keyword">import</span> com.atguigu.service.BookService;</span><br><span class="line"><span class="keyword">import</span> com.atguigu.service.impl.BookServiceImpl;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.math.BigDecimal;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.junit.Assert.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BookServiceImplTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> BookService bookService = <span class="keyword">new</span> BookServiceImpl();</span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addBook</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        bookService.addBook(<span class="keyword">new</span> Book(<span class="keyword">null</span>, <span class="string">&quot;博文真是太帅了&quot;</span>, <span class="string">&quot;博文&quot;</span>, <span class="keyword">new</span> BigDecimal(<span class="number">1555555</span>), <span class="number">200000</span>, <span class="number">0</span>, <span class="keyword">null</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">deleteBookById</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        bookService.deleteBookById(<span class="number">22</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">updateBook</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        bookService.updateBook(<span class="keyword">new</span> Book(<span class="number">21</span>, <span class="string">&quot;博文帅惨了&quot;</span>, <span class="string">&quot;博文&quot;</span>, <span class="keyword">new</span> BigDecimal(<span class="number">21313131</span>), <span class="number">100005</span>, <span class="number">0</span>, <span class="keyword">null</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">queryBookById</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(bookService.queryBookById(<span class="number">21</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">queryBooks</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(Book bookquery : bookService.queryBooks())</span><br><span class="line">            System.out.println(bookquery);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h1 id="编写图书模块的Web层，页面联调测试"><a href="#编写图书模块的Web层，页面联调测试" class="headerlink" title="编写图书模块的Web层，页面联调测试"></a>编写图书模块的Web层，页面联调测试</h1><h2 id="图书列表功能的实现"><a href="#图书列表功能的实现" class="headerlink" title="图书列表功能的实现"></a>图书列表功能的实现</h2><ol><li><p>图解列表功能流程<br><img src="https://img-blog.csdnimg.cn/0f0b9623abf64db5867b8b3b02d6e79c.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAbmVmdV9jYnc=,size_20,color_FFFFFF,t_70,g_se,x_16" alt="列表功能流程"></p></li><li><p><code>BookServlet</code>程序中添加<code>list</code>方法<br>在<code>web</code>目录下创建<code>BookServlet</code>类，并让其继承<code>BaseServlet</code>，并实现<code>list</code>方法，需要注意的是，我们直接访问是通过<code>get</code>访问的，所以我们要实现<code>doGet</code>方法，让其调用<code>doPost</code>方法。</p></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BookServlet</span> <span class="keyword">extends</span> <span class="title">BaseServlet</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> BookService bookService = <span class="keyword">new</span> BookServiceImpl();</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        doPost(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">list</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">//1 通过BookService查询全部图书</span></span><br><span class="line">        List&lt;Book&gt; books = bookService.queryBooks();</span><br><span class="line">        <span class="comment">//2 把全部图书保存到Request域中</span></span><br><span class="line">        req.setAttribute(<span class="string">&quot;books&quot;</span>, books);</span><br><span class="line">        <span class="comment">//3 请求转发到/pages/manager/book_manager.jsp页面</span></span><br><span class="line">        req.getRequestDispatcher(<span class="string">&quot;/pages/manager/book_manager.jsp&quot;</span>).forward(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后在<code>web.xml</code>中添加映射</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>BookServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>com.atguigu.web.BookServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>BookServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/manager/bookServlet<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><p>我们将其 <code>url</code> 放在 <code>/manager</code> 下是因为，图书管理属于后台管理，放在<code>/manager</code>下用于区别其是后台功能。<br><img src="https://img-blog.csdnimg.cn/fdf3bd7458634afbbe802b3ecebff7c2.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAbmVmdV9jYnc=,size_16,color_FFFFFF,t_70,g_se,x_16" alt="前后台区分"><br>3. 修改图书管理请求地址<br>我们在<code>manager_menu.jsp</code>中修改图书管理请求地址<br><img src="https://img-blog.csdnimg.cn/f30bc392dd9247809ae2f560b55adab1.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAbmVmdV9jYnc=,size_20,color_FFFFFF,t_70,g_se,x_16" alt="修改图书管理请求地址"><br>4. 修改 <code>pages/manager/book_manager.jsp</code> 页面的数据遍历输出<br>导入如下<code>jar</code>包</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">taglibs-standard-impl-1.2.1.jar</span><br><span class="line">taglibs-standard-spec-1.2.1.jar</span><br></pre></td></tr></table></figure><p>修改<code>book_manager.jsp</code>，利用<code>JSTL</code>标签库遍历输出图书信息。<br><img src="https://img-blog.csdnimg.cn/d30835652dfd45b3b2bf05e9158a09ff.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAbmVmdV9jYnc=,size_20,color_FFFFFF,t_70,g_se,x_16" alt="利用JSTL标签库遍历输出图书信息"></p><hr><h2 id="添加图书功能的实现"><a href="#添加图书功能的实现" class="headerlink" title="添加图书功能的实现"></a>添加图书功能的实现</h2><ol><li>添加图书流程细节<br><img src="https://img-blog.csdnimg.cn/58546ca35a8f44fcb2a97babe722f1e2.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAbmVmdV9jYnc=,size_20,color_FFFFFF,t_70,g_se,x_16" alt="添加图书流程"></li><li>问题说明<br>如果像之前一样，通过<code>Servlet</code>的程序转发请求，那么前后算是同一个请求，而当用户提交完请求，浏览器会记录下最后一次请求的全部信息。当用户按下功能键 <code>F5</code>，就会发起浏览器记录的最后一次请求。那么就会重复添加图书项，所以这里要使用重定向，这样前后就是两次请求了，就算按<code>F5</code>也是展示图书列表。</li><li><code>BookServlet</code>程序中添加<code>add</code>方法</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">    <span class="comment">//1 获取请求的参数==封装为Book对象</span></span><br><span class="line">    Book book = WebUtils.copyParamToBean(req.getParameterMap(), <span class="keyword">new</span> Book());</span><br><span class="line">    <span class="comment">//2 调用BookService.addBook()保存图书</span></span><br><span class="line">    bookService.addBook(book);</span><br><span class="line">    <span class="comment">//3 跳到图书列表页面</span></span><br><span class="line">    resp.sendRedirect(req.getContextPath() + <span class="string">&quot;/manager/bookServlet?action=list&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="4"><li>修改<code>book_edit.jsp</code>页面<br><img src="https://img-blog.csdnimg.cn/826f8dd3e4b54e49a9bfc5e553ee0110.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAbmVmdV9jYnc=,size_20,color_FFFFFF,t_70,g_se,x_16" alt="修改book_edit.jsp"><br>这里如果使用<code>post</code>方法提交会中文乱码，可以通过修改<code>post</code>的编码解决。</li></ol><hr><h2 id="删除图书功能的实现"><a href="#删除图书功能的实现" class="headerlink" title="删除图书功能的实现"></a>删除图书功能的实现</h2><ol><li>图解删除流程<br><img src="https://img-blog.csdnimg.cn/a14b94c36bf348dfb7699139c4935c59.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAbmVmdV9jYnc=,size_20,color_FFFFFF,t_70,g_se,x_16" alt="删除流程"></li><li><code>BookServlet</code>中添加<code>delete</code>方法<br>删除功能需要 <code>id</code> 项，我们通过 <code>getParameter</code> 方法获得的 <code>id</code> 是字符串类型，需要将其转换为 <code>Integer</code> 型。所以我们给 <code>WebUtils</code> 工具类添加转换 <code>Interger</code> 类型。</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 将字符串转换成为 int 类型的数据</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> strInt</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> defaultValue</span></span><br><span class="line"><span class="comment">* <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">parseInt</span><span class="params">(String strInt,<span class="keyword">int</span> defaultValue)</span> </span>&#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="keyword">return</span> Integer.parseInt(strInt);</span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> defaultValue;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后在<code>BookServlet</code>中添加 <code>delete</code> 方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">delete</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException,</span></span><br><span class="line"><span class="function">IOException </span>&#123;</span><br><span class="line"><span class="comment">// 1、获取请求的参数 id，图书编程</span></span><br><span class="line"><span class="keyword">int</span> id = WebUtils.parseInt(req.getParameter(<span class="string">&quot;id&quot;</span>), <span class="number">0</span>);</span><br><span class="line"><span class="comment">// 2、调用 bookService.deleteBookById();删除图书</span></span><br><span class="line">bookService.deleteBookById(id);</span><br><span class="line"><span class="comment">// 3、重定向回图书列表管理页面</span></span><br><span class="line"><span class="comment">// /book/manager/bookServlet?action=list</span></span><br><span class="line">resp.sendRedirect(req.getContextPath() + <span class="string">&quot;/manager/bookServlet?action=list&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li><p>修改删除的连接地址<br><img src="https://img-blog.csdnimg.cn/eb54af33c7a24b1b83317eb11f712721.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAbmVmdV9jYnc=,size_20,color_FFFFFF,t_70,g_se,x_16" alt="修改删除的连接地址"></p></li><li><p>给删除添加确认提示操作<br>删除属于危险项，所以我们需要添加确认操作，给删除的 <code>a</code> 标签绑定单击事件。</p></li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><br><span class="line">$( <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="comment">// 给删除的a标签绑定单击事件，用于删除的确认提示操作</span></span><br><span class="line">$(<span class="string">&quot;a.deleteClass&quot;</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="comment">// 在事件的 function 函数中，有一个 this 对象。这个 this 对象，是当前正在响应事件的 dom 对象。</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * confirm 是确认提示框函数</span></span><br><span class="line"><span class="comment"> * 参数是它的提示内容</span></span><br><span class="line"><span class="comment"> * 它有两个按钮，一个确认，一个是取消。</span></span><br><span class="line"><span class="comment"> * 返回 true 表示点击了，确认，返回 false 表示点击取消。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">return</span> confirm(<span class="string">&quot;你确定要删除【&quot;</span> + $(<span class="built_in">this</span>).parent().parent().find(<span class="string">&quot;td:first&quot;</span>).text() + <span class="string">&quot;】?&quot;</span>);</span><br><span class="line"><span class="comment">// return false// 阻止元素的默认行为===不提交请求</span></span><br><span class="line">&#125;);</span><br><span class="line">&#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><hr><h2 id="修改图书功能的实现"><a href="#修改图书功能的实现" class="headerlink" title="修改图书功能的实现"></a>修改图书功能的实现</h2><ol><li><p>图解修改图书细节<br><img src="https://img-blog.csdnimg.cn/577e296c79634466ab846f7662828c9a.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAbmVmdV9jYnc=,size_20,color_FFFFFF,t_70,g_se,x_16" alt="修改图书"></p></li><li><p>更新修改的请求地址<br><img src="https://img-blog.csdnimg.cn/204199d6089b489ab4dcee50b51b975f.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAbmVmdV9jYnc=,size_20,color_FFFFFF,t_70,g_se,x_16" alt="更新修改的请求地址"></p></li><li><p><code>BookServlet</code>程序中添加<code>getBook</code>方法</p></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">getBook</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException,</span></span><br><span class="line"><span class="function">IOException </span>&#123;</span><br><span class="line"><span class="comment">//1 获取请求的参数图书编号</span></span><br><span class="line"><span class="keyword">int</span> id = WebUtils.parseInt(req.getParameter(<span class="string">&quot;id&quot;</span>), <span class="number">0</span>);</span><br><span class="line"><span class="comment">//2 调用 bookService.queryBookById 查询图书</span></span><br><span class="line">Book book = bookService.queryBookById(id);</span><br><span class="line"><span class="comment">//3 保存到图书到 Request 域中</span></span><br><span class="line">req.setAttribute(<span class="string">&quot;book&quot;</span>, book) ;</span><br><span class="line"><span class="comment">//4 请求转发到。pages/manager/book_edit.jsp 页面</span></span><br><span class="line">req.getRequestDispatcher(<span class="string">&quot;/pages/manager/book_edit.jsp&quot;</span>).forward(req,resp);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="4"><li>在<code>book_edit.jsp</code>页面中显示修改的数据<br><img src="https://img-blog.csdnimg.cn/5ff89df479644432b087677b0c785cdc.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAbmVmdV9jYnc=,size_20,color_FFFFFF,t_70,g_se,x_16" alt="显示修改的数据"></li><li>在 <code>BookServlet</code>程序中添加<code>update</code>方法</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException,</span></span><br><span class="line"><span class="function">IOException </span>&#123;</span><br><span class="line"><span class="comment">// 1、获取请求的参数==封装成为 Book 对象</span></span><br><span class="line">Book book = WebUtils.copyParamToBean(req.getParameterMap(),<span class="keyword">new</span> Book());</span><br><span class="line"><span class="comment">// 2、调用 BookService.updateBook( book );修改图书</span></span><br><span class="line">bookService.updateBook(book);</span><br><span class="line"><span class="comment">// 3、重定向回图书列表管理页面</span></span><br><span class="line"><span class="comment">// 地址：/工程名/manager/bookServlet?action=list</span></span><br><span class="line">resp.sendRedirect(req.getContextPath() + <span class="string">&quot;/manager/bookServlet?action=list&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="6"><li>解决 <code>book_edit.jsp</code> 页面，既要实现添加，又要实现修改操作。<br><img src="https://img-blog.csdnimg.cn/369e13b37816414ea6d96c566a15bcd2.png" alt="实现添加与修改"></li></ol>]]></content>
      
      
      <categories>
          
          <category> JavaWeb书城项目 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> jsp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaWeb书城项目(四)———代码优化</title>
      <link href="/2021/11/04/JavaWeb_BookProject_4/"/>
      <url>/2021/11/04/JavaWeb_BookProject_4/</url>
      
        <content type="html"><![CDATA[<blockquote><p>前三部分我们已经完成了书城项目的登录与注册功能，第四部分我们对之前的代码进行优化。</p></blockquote><h1 id="合并Servlet"><a href="#合并Servlet" class="headerlink" title="合并Servlet"></a>合并Servlet</h1><p>在实际的开发中，一个模块，一般只使用一个 <code>Servlet</code> 程序，用户的注册与登录都属于用户模块，因此只需要一个 <code>Servlet</code> 程序即可，所以我们将 <code>LoginServlet</code> 与 <code>RegistSerlet</code> 程序合并为一个 <code>UserServlet</code> 程序。<br><strong>那么一个请求过来，如何知道他是注册还是登录呢？</strong></p><span id="more"></span><p>这时我们就要用到表单项的隐藏域来解决。<br><img src="https://img-blog.csdnimg.cn/00b66ca955184dfe971893d463e24dc4.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAbmVmdV9jYnc=,size_20,color_FFFFFF,t_70,g_se,x_16" alt="登录表单隐藏域"><br><img src="https://img-blog.csdnimg.cn/071e8889d53e403cbe01779153920bf7.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAbmVmdV9jYnc=,size_20,color_FFFFFF,t_70,g_se,x_16" alt="注册表单隐藏域"><br>这样，我们在用 <code>Servlet</code> 程序接收请求时，就能根据 <code>name</code> 的 <code>value</code> 项来判断其是注册还是登录。</p><hr><h1 id="反射优化"><a href="#反射优化" class="headerlink" title="反射优化"></a>反射优化</h1><p>用户模块不止有登录和注册功能，还会有注销，修改密码等其它功能，如果这时都放在一个 <code>Servlet</code> 里，那么代码必定有很多 <code>if...else...</code>，这样代码就会显得很冗杂。我们可以使用反射优化 <code>if...else...</code>。<br><img src="https://img-blog.csdnimg.cn/d763fd5ea8504513b8f8f12241725e60.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAbmVmdV9jYnc=,size_20,color_FFFFFF,t_70,g_se,x_16" alt="反射优化"><br>这样两行代码就能代替繁琐的 <code>if...else,,,</code>。</p><hr><h1 id="抽取BaseServlet程序"><a href="#抽取BaseServlet程序" class="headerlink" title="抽取BaseServlet程序"></a>抽取BaseServlet程序</h1><p><img src="https://img-blog.csdnimg.cn/59dd6bafc4f84a9cbbfdeac8cb4b2e0e.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAbmVmdV9jYnc=,size_20,color_FFFFFF,t_70,g_se,x_16" alt="抽取BaseServlet"><br>因为我们不止一个模块，除了用户模块，还会有图书模块等，这样其反射优化都是一样的，那么我们可以抽取出父类 <code>BaseServlet</code> 程序，那么其它模块就可以继承这个模块，达到复用代码的目的。<br><code>BaseServlet</code>程序：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.atguigu.web;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">BaseServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        String action = req.getParameter(<span class="string">&quot;action&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 获取action业务鉴别字符串，获得相应的业务 方法反射对象</span></span><br><span class="line">            Method method = <span class="keyword">this</span>.getClass().getDeclaredMethod(action, HttpServletRequest.class, HttpServletResponse.class);</span><br><span class="line">            <span class="comment">// 调用目标业务 方法</span></span><br><span class="line">            method.invoke(<span class="keyword">this</span>, req, resp);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h1 id="数据的封装和抽取BeanUtils的使用"><a href="#数据的封装和抽取BeanUtils的使用" class="headerlink" title="数据的封装和抽取BeanUtils的使用"></a>数据的封装和抽取BeanUtils的使用</h1><p>我们一般会将数据封装进<code>JavaBean</code>里，但如果通过调用 <code>Set</code> 方法会使代码很冗余，这时我们可以使用第三方工具类 <code>BeanUtils</code> ，它可以用于把 <code>Map</code> 中的值注入到 <code>JavaBean</code> 中。</p><ol><li>导入需要的 <code>jar</code> 包：<br> commons-beanutils-1.8.0.jar<br> commons-logging-1.1.1.jar</li><li>编写 <code>WebUtils</code> 工具类使用<br><code>WebUtils</code>工具类:</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.atguigu.utils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.commons.beanutils.BeanUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.InvocationTargetException;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WebUtils</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 把Map中的值注入到JavaBean中</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> value</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> bean</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> &lt;T&gt;</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; <span class="function">T <span class="title">copyParamToBean</span><span class="params">(Map value , T bean )</span></span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;注入之前：&quot;</span> + bean);</span><br><span class="line">            <span class="comment">/**</span></span><br><span class="line"><span class="comment">             * 把所有请求的参数都注入到bean对象中</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">            BeanUtils.populate(bean, value);</span><br><span class="line">            System.out.println(<span class="string">&quot;注入之后：&quot;</span> + bean);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> bean;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ol start="3"><li>在程序中加入如下代码即可调用方法将请求参数注入到<code>JavaBean</code>中<br><img src="https://img-blog.csdnimg.cn/2efa959e63324468a41ebbaffe4256fe.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAbmVmdV9jYnc=,size_20,color_FFFFFF,t_70,g_se,x_16" alt="调用方法"></li></ol><hr><h1 id="使用EL表达式修改表单回显"><a href="#使用EL表达式修改表单回显" class="headerlink" title="使用EL表达式修改表单回显"></a>使用EL表达式修改表单回显</h1><p>我们可以使用<code>EL</code>表达式来修改表单回显，这样能使代码更简洁。<br><img src="https://img-blog.csdnimg.cn/85354810ee0f4b11965c4735b49e7ae6.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAbmVmdV9jYnc=,size_20,color_FFFFFF,t_70,g_se,x_16" alt="修改login,jsp"><br><img src="https://img-blog.csdnimg.cn/12a629fb600a45619e8ad35c63da5057.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAbmVmdV9jYnc=,size_20,color_FFFFFF,t_70,g_se,x_16" alt="修改regist.jsp"></p>]]></content>
      
      
      <categories>
          
          <category> JavaWeb书城项目 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> jsp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaWeb书城项目(三)———表单回显</title>
      <link href="/2021/11/04/JavaWeb_BookProject_3/"/>
      <url>/2021/11/04/JavaWeb_BookProject_3/</url>
      
        <content type="html"><![CDATA[<blockquote><p>之前已经基本做好用户的注册和登录功能，但用户注册和登录还缺少错误信息的提示，比如用户名已存在会在页面显示用户名已存在。这次我们就来完成表单回显的功能。</p></blockquote><h1 id="修改所有-html为-jsp"><a href="#修改所有-html为-jsp" class="headerlink" title="修改所有.html为.jsp"></a>修改所有.html为.jsp</h1><p>只有把静态页面改为动态页面，才能完成表单回显的功能，因此第一步我们先将所有 <code>.html</code> 页面 改为 <code>.jsp</code> 页面。<br>将 <code>.html</code> 页面改为 <code>.jsp</code> 页面只需要如下两个步骤。</p><span id="more"></span><ol><li>在头部添加如下语句</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page contentType=&quot;text/html;charset=UTF-8&quot; language=&quot;java&quot; %&gt;</span><br></pre></td></tr></table></figure><ol start="2"><li>将 <code>.html</code> 后缀改为 <code>.jsp</code> 后缀，<strong>比如，user目录下修改完为如下</strong><br><img src="https://img-blog.csdnimg.cn/985e54af93024573bcf8644783a734bd.png" alt="html改为jsp"></li></ol><hr><h1 id="抽取jsp公共内容"><a href="#抽取jsp公共内容" class="headerlink" title="抽取jsp公共内容"></a>抽取jsp公共内容</h1><p>我们可以将 <code>jsp</code> 页面中的公共内容提取出来，这样以后在维护或者修改的时候，如果需要对公共部分进行修改，那么只需要修改一份代码即可。<br>我们先在 <code>pages</code> 目录下创建 <code>common</code> 文件夹，用于存放公共部分代码</p><h2 id="登录成功菜单部分"><a href="#登录成功菜单部分" class="headerlink" title="登录成功菜单部分"></a>登录成功菜单部分</h2><p><img src="https://img-blog.csdnimg.cn/b864b27054494f8c937c57680c824cd2.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAbmVmdV9jYnc=,size_20,color_FFFFFF,t_70,g_se,x_16" alt="登录成功菜单"><br>我们在登录成功之后的页面，都会有如上图所示，位于页面右上角的菜单部分，我们可以将其提取出来，放入 <code>common</code> 文件夹下的 <code>login_success_menu.jsp</code> 中。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page contentType=&quot;text/html;charset=UTF-8&quot; language=&quot;java&quot; %&gt;</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>欢迎<span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;um_span&quot;</span>&gt;</span>韩总<span class="tag">&lt;/<span class="name">span</span>&gt;</span>光临尚硅谷书城<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;pages/order/order.jsp&quot;</span>&gt;</span>我的订单<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;index.jsp&quot;</span>&gt;</span>注销<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;index.jsp&quot;</span>&gt;</span>返回<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>之后在公共位置改为如下代码</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;%-- 静态包含登录成功之后的菜单 --%&gt;</span><br><span class="line">&lt;%@ include file=&quot;/pages/common/login_success_menu.jsp&quot;%&gt;</span><br></pre></td></tr></table></figure><h2 id="头部信息"><a href="#头部信息" class="headerlink" title="头部信息"></a>头部信息</h2><p>我们会在 <code>jsp</code> 页面头部写 <code>base</code> 标签，导入样式及 <code>jQuery</code> 的包，因此也可以提取出如下公共部分放入<code>common</code>文件夹下<code>head.jsp</code>中。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType=&quot;text/html;charset=UTF-8&quot; language=&quot;java&quot; %&gt;</span><br><span class="line">&lt;%</span><br><span class="line">  String basePath = request.getScheme()</span><br><span class="line">            + &quot;://&quot;</span><br><span class="line">            + request.getServerName()</span><br><span class="line">            + &quot;:&quot;</span><br><span class="line">            + request.getServerPort()</span><br><span class="line">            + request.getContextPath()</span><br><span class="line">            + &quot;/&quot;;</span><br><span class="line">%&gt;</span><br><span class="line"><span class="comment">&lt;!-- 写base标签，永远固定相对路径跳转的结果 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">base</span> <span class="attr">href</span>=<span class="string">&quot;&lt;%=basePath%&gt;&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;static/css/style.css&quot;</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;static/script/jquery-1.7.2.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>需要注意的是，我们自己每次试验都是通过 <code>localhost</code> 访问服务器的，但是正常情况下，是用户使用客户端访问服务器的 <code>ip</code>，并且服务器的 <code>ip</code> 是可能会动态变化的，所以我们写 <code>base</code> 标签的时候，必须动态获取服务器的 <code>ip</code> 地址。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page contentType=&quot;text/html;charset=UTF-8&quot; language=&quot;java&quot; %&gt;</span><br><span class="line">&lt;%</span><br><span class="line">  String basePath = request.getScheme() //协议名称</span><br><span class="line">            + &quot;://&quot;</span><br><span class="line">            + request.getServerName() //服务器ip</span><br><span class="line">            + &quot;:&quot;</span><br><span class="line">            + request.getServerPort() //服务器端口</span><br><span class="line">            + request.getContextPath() //工程路径</span><br><span class="line">            + &quot;/&quot;;</span><br><span class="line">%&gt;</span><br><span class="line"><span class="comment">&lt;!-- 写base标签，永远固定相对路径跳转的结果 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">base</span> <span class="attr">href</span>=<span class="string">&quot;&lt;%=basePath%&gt;&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;static/css/style.css&quot;</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;static/script/jquery-1.7.2.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>之后在公共位置改为如下代码</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;%-- 静态包含 base标签，css样式，jQuery文件 --%&gt;</span><br><span class="line">&lt;%@ include file=&quot;/pages/common/head.jsp&quot;%&gt;</span><br></pre></td></tr></table></figure><h2 id="脚部信息"><a href="#脚部信息" class="headerlink" title="脚部信息"></a>脚部信息</h2><p><img src="https://img-blog.csdnimg.cn/0d7de5fdef1f464eb2a45078efb8fa4c.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAbmVmdV9jYnc=,size_20,color_FFFFFF,t_70,g_se,x_16" alt="脚部信息"><br>我们在所有页面下面都会加上如上图所示的脚部信息，因此我们将其提取出来放入 <code>common</code> 文件夹下的 <code>footer.jsp</code> 中。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page contentType=&quot;text/html;charset=UTF-8&quot; language=&quot;java&quot; %&gt;</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;bottom&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span></span><br><span class="line">尚硅谷书城.Copyright <span class="symbol">&amp;copy;</span>2015</span><br><span class="line"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>之后在公共位置改为如下代码</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;%-- include包含脚部信息 --%&gt;</span><br><span class="line">&lt;%@ include file=&quot;/pages/common/footer.jsp&quot;%&gt;</span><br></pre></td></tr></table></figure><h2 id="后台管理菜单"><a href="#后台管理菜单" class="headerlink" title="后台管理菜单"></a>后台管理菜单</h2><p><img src="https://img-blog.csdnimg.cn/b1cc6f7fb7c94369bdd693010b5054a1.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAbmVmdV9jYnc=,size_20,color_FFFFFF,t_70,g_se,x_16" alt="后台管理菜单"><br>后台管理页面都会有如上图所示的菜单项，我们也可以将其提取出来放入 <code>common</code> 文件夹下的 <code>manager_menu.jsp</code> 中。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page contentType=&quot;text/html;charset=UTF-8&quot; language=&quot;java&quot; %&gt;</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;pages/manager/book_manager.jsp&quot;</span>&gt;</span>图书管理<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;pages/manager/order_manager.jsp&quot;</span>&gt;</span>订单管理<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;index.jsp&quot;</span>&gt;</span>返回商城<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>之后在公共位置改为如下代码</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;%-- 静态包含manager管理模块的菜单 --%&gt;</span><br><span class="line">&lt;%@ include file=&quot;/pages/common/manager_menu.jsp&quot;%&gt;</span><br></pre></td></tr></table></figure><hr><h1 id="表单提交失败的错误回显"><a href="#表单提交失败的错误回显" class="headerlink" title="表单提交失败的错误回显"></a>表单提交失败的错误回显</h1><p>具体实现思路</p><ol><li>在 <code>Servlet</code> 程序中将错误回显信息放入 <code>request</code> 域中</li><li>在 <code>jsp</code> 页面中输出回显信息</li></ol><h2 id="修改Servlet程序"><a href="#修改Servlet程序" class="headerlink" title="修改Servlet程序"></a>修改Servlet程序</h2><p>修改 <code>LoginServlet</code> 和 <code>RegistServlet</code> 程序如下<br><img src="https://img-blog.csdnimg.cn/8bd3635c8df348f88334e4fb516658a8.png" alt="修改LoginServlet程序"><br><img src="https://img-blog.csdnimg.cn/f527b7d221a647b79e5223b0b2d1fb8c.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAbmVmdV9jYnc=,size_20,color_FFFFFF,t_70,g_se,x_16" alt="修改RegistServlet程序"></p><h2 id="修改jsp页面"><a href="#修改jsp页面" class="headerlink" title="修改jsp页面"></a>修改jsp页面</h2><p>修改 <code>login.jsp</code> 和 <code>regist.jsp</code> 如下<br><img src="https://img-blog.csdnimg.cn/b452722e253e4ca4b3f6d9c2fdec76f8.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAbmVmdV9jYnc=,size_20,color_FFFFFF,t_70,g_se,x_16" alt="修改login,jsp"><br><img src="https://img-blog.csdnimg.cn/ff684faf171041779f38868449815d48.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAbmVmdV9jYnc=,size_20,color_FFFFFF,t_70,g_se,x_16" alt="修改regist,jsp"></p>]]></content>
      
      
      <categories>
          
          <category> JavaWeb书城项目 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> jsp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Leetcode729. 我的日程安排表 I</title>
      <link href="/2021/11/02/Leetcode729/"/>
      <url>/2021/11/02/Leetcode729/</url>
      
        <content type="html"><![CDATA[<h1 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a>题目链接</h1><p><a href="https://leetcode-cn.com/problems/my-calendar-i/">点我(^_^)</a></p><h1 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h1><p>题意就是不和之前日程重合就可以插入日程并返回true,否则返回false</p><h1 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h1><span id="more"></span><p>黑色代表已有日程，黄色代表待插入日程<br>下面代表合法的，即可插入<br><img src="https://img-blog.csdnimg.cn/2e88ec82d049446e9caa4f3b6b281092.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAbmVmdV9jYnc=,size_20,color_FFFFFF,t_70,g_se,x_16" alt="合法情况"><br>再看看不能插入的情况<br><img src="https://img-blog.csdnimg.cn/3c03a4c4fadf40f1a1a4af1eda20bf2c.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAbmVmdV9jYnc=,size_20,color_FFFFFF,t_70,g_se,x_16" alt="不合法情况"><br>我们通过观察可以发现，所有不合法情况都是 <strong>已有日程的左端</strong> &lt; **待插入日程右端**，所以我们只要找已有日程中 **小于待插入日程右端** 最大的，看其右端是否 &gt; <strong>待插入日程左端</strong>，如果大于就不能插入，否则就能插入。<br>因此，我们可以维护一个有序序列，然后就可以通过二分找到 <strong>小于待插入日程右端</strong> 最大的位置。<br>分析一下时间复杂度，每次的二分操作是 O(logn)，插入操作是 O(n)，所以整体复杂度还是 O(n^2^)，看着和暴力法差不多，实际对于不能插入的情况，我们 O(logn) 就能判断，并且每次插入操作也不是恒定 O(n) 的，所以还是比暴力法好的。<br>对于平均复杂度 O(nlogn) 的算法，这里可以提供一种 权值线段树 的思路，这样每次就是恒定 O(logk) 的操作，k为日程的数字能取得大小。但是空间就不够了，可以通过动态开点解决。 </p><h1 id="具体代码"><a href="#具体代码" class="headerlink" title="具体代码"></a>具体代码</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; pii;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyCalendar</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    vector&lt;pii&gt; vc;</span><br><span class="line">    <span class="built_in">MyCalendar</span>() &#123;</span><br><span class="line">        vc.<span class="built_in">clear</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">book</span><span class="params">(<span class="keyword">int</span> start, <span class="keyword">int</span> end)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(vc.<span class="built_in">empty</span>())</span><br><span class="line">        &#123;</span><br><span class="line">            vc.<span class="built_in">push_back</span>(<span class="built_in">make_pair</span>(start, end));</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>; </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> l=<span class="number">0</span>, r=vc.<span class="built_in">size</span>()<span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">int</span> pos=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(l&lt;=r)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> mid = (l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(vc[mid].first &gt;= end)</span><br><span class="line">                r = mid - <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                l = mid + <span class="number">1</span>;</span><br><span class="line">                pos = mid;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(vc[pos].first &gt;= end)</span><br><span class="line">        &#123;</span><br><span class="line">            vc.<span class="built_in">emplace</span>(vc.<span class="built_in">begin</span>(), <span class="built_in">make_pair</span>(start, end));</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(vc[pos].second &gt; start)</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                vc.<span class="built_in">emplace</span>(vc.<span class="built_in">begin</span>()+pos+<span class="number">1</span>, <span class="built_in">make_pair</span>(start, end));</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 力扣刷题笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
            <tag> 二分 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaWeb书城项目(二)——用户注册和登录</title>
      <link href="/2021/11/02/JavaWeb_BookProject_2/"/>
      <url>/2021/11/02/JavaWeb_BookProject_2/</url>
      
        <content type="html"><![CDATA[<blockquote><p>之前已经做好前端页面，现在要通过 servlet 程序以及 JDBC 具体实现用户注册和登录</p></blockquote><h1 id="JavaEE项目的三层架构"><a href="#JavaEE项目的三层架构" class="headerlink" title="JavaEE项目的三层架构"></a>JavaEE项目的三层架构</h1><p><img src="https://img-blog.csdnimg.cn/12e5b581ea2044f3941ceaf8b40f2efc.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAbmVmdV9jYnc=,size_20,color_FFFFFF,t_70,g_se,x_16" alt="三层架构"><br>为什么要分层呢？通过一层完成所有事情不行吗？</p><span id="more"></span><p><strong>分层的目的是为了解耦。解耦就是为了降低代码的耦合度。方便项目后期的维护和升级。</strong><br>我们知道有些项目代码量是巨大的，如果放在一层后期维护和升级会很麻烦，如果分出不同的层，每层都有不同负责的人员，那么维护和升级会变得轻松很多。<br><strong>需求分析</strong><br>需求一：用户注册<br>1）访问注册页面<br>2）填写注册信息，提交给服务器<br>3）服务器应该保存用户<br>4）当用户已经存在—-提示用户注册 失败，用户名已存在<br>5）当用户不存在—–注册成功<br>需求二：用户登录<br>1）访问登陆页面<br>2）填写用户名密码后提交<br>3）服务器判断用户是否存在<br>4）如果登陆失败 —&gt;&gt;&gt;&gt; 返回用户名或者密码错误信息<br>5）如果登录成功 —&gt;&gt;&gt;&gt; 返回登陆成功 信息</p><p><strong>需要的接口和类</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">web 层 com.atguigu.web/servlet/controller</span><br><span class="line">service 层 com.atguigu.service Service 接口包</span><br><span class="line">   com.atguigu.service.impl Service 接口实现类</span><br><span class="line">dao 持久层 com.atguigu.dao Dao 接口包</span><br><span class="line">  com.atguigu.dao.impl Dao 接口实现类</span><br><span class="line">实体 bean 对象 com.atguigu.pojo/entity/domain/bean JavaBean 类</span><br><span class="line">测试包 com.atguigu.test/junit</span><br><span class="line">工具类 com.atguigu.utils</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/2a435f23ee324373ab7ad8f7a9eeff6d.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAbmVmdV9jYnc=,size_17,color_FFFFFF,t_70,g_se,x_16" alt="搭建环境"><br>完成类编写后的目录结构如下<br><img src="https://img-blog.csdnimg.cn/566449c03690451e9fc0b7c56acfc6d0.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAbmVmdV9jYnc=,size_11,color_FFFFFF,t_70,g_se,x_16" alt="目录结构"></p><hr><h1 id="创建数据库和表"><a href="#创建数据库和表" class="headerlink" title="创建数据库和表"></a>创建数据库和表</h1><p>这里我使用的是 <code>MySql</code>  + <code>Navicat</code>，新建一个<code>book</code>数据库，并新建一个<code>t_user</code>表。<br><img src="https://img-blog.csdnimg.cn/057a45b6e8ad41a3828e48ee2ea66050.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAbmVmdV9jYnc=,size_20,color_FFFFFF,t_70,g_se,x_16" alt="t_user表"><br>通过建立<code>Unique</code>类型索引，可以使该字段唯一。<br><img src="https://img-blog.csdnimg.cn/58c621cadfaf4b61a8b3fa38bcc4f5a3.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAbmVmdV9jYnc=,size_20,color_FFFFFF,t_70,g_se,x_16" alt="建立Unique索引"><br>插入一条数据<br><img src="https://img-blog.csdnimg.cn/e14597815e174c709be2b985857447e0.png" alt="插入数据"></p><p>当然也可以直接使用如下 <code>Sql</code> 语句创建</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">drop</span> database if <span class="keyword">exists</span> book;</span><br><span class="line"><span class="keyword">create</span> database book;</span><br><span class="line">use book;</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> t_user(</span><br><span class="line">id <span class="type">int</span> <span class="keyword">primary</span> key auto_increment,</span><br><span class="line">username <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">not</span> <span class="keyword">null</span> <span class="keyword">unique</span>,</span><br><span class="line">password <span class="type">varchar</span>(<span class="number">32</span>) <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line">email <span class="type">varchar</span>(<span class="number">200</span>)</span><br><span class="line">);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> t_user(username,password,email) <span class="keyword">values</span>(<span class="string">&#x27;admin&#x27;</span>,<span class="string">&#x27;admin&#x27;</span>,<span class="string">&#x27;admin@atguigu.com&#x27;</span>);</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> t_user;</span><br></pre></td></tr></table></figure><hr><h1 id="编写数据库对应的JavaBean对象"><a href="#编写数据库对应的JavaBean对象" class="headerlink" title="编写数据库对应的JavaBean对象"></a>编写数据库对应的JavaBean对象</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.atguigu.pojo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String username;</span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line">    <span class="keyword">private</span> String email;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(Integer id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getUsername</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> username;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUsername</span><span class="params">(String username)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.username = username;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getPassword</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> password;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPassword</span><span class="params">(String password)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.password = password;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getEmail</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> email;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setEmail</span><span class="params">(String email)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.email = email;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;User&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;id=&quot;</span> + id +</span><br><span class="line">                <span class="string">&quot;, username=&#x27;&quot;</span> + username + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, password=&#x27;&quot;</span> + password + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, email=&#x27;&quot;</span> + email + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">User</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">User</span><span class="params">(Integer id, String username, String password, String email)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">        <span class="keyword">this</span>.username = username;</span><br><span class="line">        <span class="keyword">this</span>.password = password;</span><br><span class="line">        <span class="keyword">this</span>.email = email;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><hr><h1 id="编写工具类JdbcUtils"><a href="#编写工具类JdbcUtils" class="headerlink" title="编写工具类JdbcUtils"></a>编写工具类JdbcUtils</h1><p><code>JdbcUtils</code>工具类主要用来<strong>建立数据库连接</strong>与<strong>释放数据库连接</strong></p><h2 id="导入jar包"><a href="#导入jar包" class="headerlink" title="导入jar包"></a>导入jar包</h2><p>数据库和连接池需要如下<code>jar</code>包</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">druid-<span class="number">1.1</span><span class="number">.9</span>.jar</span><br><span class="line">mysql-connector-java-<span class="number">5.1</span><span class="number">.7</span>-bin.jar</span><br></pre></td></tr></table></figure><p>以下是测试需要：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hamcrest-core-<span class="number">1.3</span>.jar</span><br><span class="line">junit-<span class="number">4.12</span>.jar</span><br></pre></td></tr></table></figure><h2 id="编写jdbc-properties配置文件"><a href="#编写jdbc-properties配置文件" class="headerlink" title="编写jdbc.properties配置文件"></a>编写jdbc.properties配置文件</h2><p>放在<code>src</code>文件夹下<br><img src="https://img-blog.csdnimg.cn/450cea2bedef4a979d0080d26dc68592.png" alt="放入src文件夹下"><br>内容根据自己情况修改<br><code>username</code> 改为你的用户名<br><code>password</code> 改为你的密码<br><code>initialSize</code> 为初始连接池大小<br><code>maxActive</code> 为最大可用连接数</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">username=root</span><br><span class="line">password=<span class="number">123456</span></span><br><span class="line">url=jdbc:mysql:<span class="comment">//localhost:3306/book?useUnicode=true&amp;characterEncoding=utf8</span></span><br><span class="line">driverClassName=com.mysql.jdbc.Driver</span><br><span class="line">initialSize=<span class="number">5</span></span><br><span class="line">maxActive=<span class="number">10</span></span><br></pre></td></tr></table></figure><h2 id="编写JdbcUtils工具类"><a href="#编写JdbcUtils工具类" class="headerlink" title="编写JdbcUtils工具类"></a>编写JdbcUtils工具类</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.atguigu.utils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.alibaba.druid.pool.DruidDataSource;</span><br><span class="line"><span class="keyword">import</span> com.alibaba.druid.pool.DruidDataSourceFactory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"><span class="keyword">import</span> java.util.Properties;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JdbcUtils</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> DruidDataSource dataSource;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Properties properties = <span class="keyword">new</span> Properties();</span><br><span class="line">            <span class="comment">// 读取jdbc.properties文件</span></span><br><span class="line">            InputStream inputStream = JdbcUtils.class.getClassLoader().getResourceAsStream(<span class="string">&quot;jdbc.properties&quot;</span>);</span><br><span class="line">            <span class="comment">// 从流中加载数据</span></span><br><span class="line">            properties.load(inputStream);</span><br><span class="line">            <span class="comment">// 创建数据库连接池</span></span><br><span class="line">            dataSource = (DruidDataSource) DruidDataSourceFactory.createDataSource(properties);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e)</span><br><span class="line">        &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取数据库连接池中的连接</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 如果返回null，说明获取连接失败 &lt;br/&gt;有值就是成功</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Connection <span class="title">getConnection</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        Connection conn = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            conn = dataSource.getConnection();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> conn;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 关闭连接，放回数据库连接池</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> conn</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">close</span><span class="params">(Connection conn)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(conn != <span class="keyword">null</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                conn.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="JdbcUtils测试"><a href="#JdbcUtils测试" class="headerlink" title="JdbcUtils测试"></a>JdbcUtils测试</h2><p>我们在<code>test</code>包下创建<code>JdbcUtilsTest</code>测试类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.atguigu.test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.atguigu.utils.JdbcUtils;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JdbcUtilsTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testJdbcUtils</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;<span class="number">100</span>; ++i)</span><br><span class="line">        &#123;</span><br><span class="line">            Connection con = JdbcUtils.getConnection();</span><br><span class="line">            System.out.println(con);</span><br><span class="line">            JdbcUtils.close(con);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/24b52549d221458fa0eaa0e212661984.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAbmVmdV9jYnc=,size_20,color_FFFFFF,t_70,g_se,x_16" alt="测试结果"></p><hr><h1 id="编写BaseDao"><a href="#编写BaseDao" class="headerlink" title="编写BaseDao"></a>编写BaseDao</h1><p><code>BaseDao</code>类用来封装数据库的更新，查询操作(包括查询一行，查询多行，查询一个值)</p><h2 id="导入-DBUtils-的jar包"><a href="#导入-DBUtils-的jar包" class="headerlink" title="导入 DBUtils 的jar包"></a>导入 DBUtils 的jar包</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">commons-dbutils-<span class="number">1.3</span>.jar</span><br></pre></td></tr></table></figure><h2 id="编写-BaseDao"><a href="#编写-BaseDao" class="headerlink" title="编写 BaseDao"></a>编写 BaseDao</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.atguigu.dao.impl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.atguigu.utils.JdbcUtils;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.dbutils.QueryRunner;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.dbutils.handlers.BeanHandler;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.dbutils.handlers.BeanListHandler;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.dbutils.handlers.ScalarHandler;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">BaseDao</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 使用DbUtils操作数据库</span></span><br><span class="line">    <span class="keyword">private</span> QueryRunner queryRunner = <span class="keyword">new</span> QueryRunner();</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * update() 方法用来执行：Insert\Update\Delete语句</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 如果返回-1说明执行失败&lt;br/&gt;返回其它表示影响的行数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">update</span><span class="params">(String sql, Object ... args)</span></span>&#123;</span><br><span class="line">        Connection connection = JdbcUtils.getConnection();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">return</span>  queryRunner.update(connection, sql, args);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException throwables) &#123;</span><br><span class="line">            throwables.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            JdbcUtils.close(connection);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 查询返回一个javaBean的sql语句</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> type 返回的对象类型</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> sql 执行的sql语句</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> args sql对应的参数值</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> &lt;T&gt; 返回的类型的泛型</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> &lt;T&gt; <span class="function">T <span class="title">queryForOne</span><span class="params">(Class&lt;T&gt; type, String sql, Object ... args)</span></span>&#123;</span><br><span class="line">        Connection con = JdbcUtils.getConnection();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> queryRunner.query(con, sql, <span class="keyword">new</span> BeanHandler&lt;T&gt;(type), args);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException throwables) &#123;</span><br><span class="line">            throwables.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            JdbcUtils.close(con);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 查询返回多个javaBean的sql语句</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> type 返回的对象类型</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> sql 执行的sql语句</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> args sql对应的参数值</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> &lt;T&gt; 返回的类型的泛型</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> &lt;T&gt; <span class="function">List&lt;T&gt; <span class="title">queryForList</span><span class="params">(Class&lt;T&gt; type, String sql, Object ... args)</span></span>&#123;</span><br><span class="line">        Connection con = JdbcUtils.getConnection();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> queryRunner.query(con, sql, <span class="keyword">new</span> BeanListHandler&lt;T&gt;(type), args);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException throwables) &#123;</span><br><span class="line">            throwables.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            JdbcUtils.close(con);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 执行返回一行一列的sql语句</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> sql 执行的sql语句</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> args sql对应的参数值</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">queryForSingleValue</span><span class="params">(String sql, Object ... args)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        Connection conn = JdbcUtils.getConnection();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span>  &#123;</span><br><span class="line">            <span class="keyword">return</span> queryRunner.query(conn, sql, <span class="keyword">new</span> ScalarHandler(), args);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            JdbcUtils.close(conn);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><hr><h1 id="编写UserDao和测试"><a href="#编写UserDao和测试" class="headerlink" title="编写UserDao和测试"></a>编写UserDao和测试</h1><p><code>UserDao</code>也是属于<code>Dao</code>层，相比于<code>BaseDao</code>更加抽象，用来通过<strong>用户名查询是否有这个用户，用户名和密码查询，保存用户信息</strong></p><h2 id="UserDao接口"><a href="#UserDao接口" class="headerlink" title="UserDao接口"></a>UserDao接口</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.atguigu.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.atguigu.pojo.User;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserDao</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据用户名查询用户信息</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> username 用户名</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 如果返回null,说明没有这个用户,反之亦然</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">queryUserByUsername</span><span class="params">(String username)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据用户名和密码查询用户信息</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> username 用户名</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> password 密码</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 如果返回null, 说明用户名或密码错误, 反之亦然</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">queryUserByUsernameAndPassword</span><span class="params">(String username, String password)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 保存用户信息</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> user 用户信息</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> -1表示错误，其它表示影响的行数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">saveUser</span><span class="params">(User user)</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="UserDaoImpl实现类"><a href="#UserDaoImpl实现类" class="headerlink" title="UserDaoImpl实现类"></a>UserDaoImpl实现类</h2><p><code>UserDaoImpl</code>实现类继承<code>BaseDao</code>并实现<code>UserDao</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.atguigu.dao.impl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.atguigu.dao.UserDao;</span><br><span class="line"><span class="keyword">import</span> com.atguigu.pojo.User;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span>   <span class="title">UserDaoImpl</span> <span class="keyword">extends</span> <span class="title">BaseDao</span> <span class="keyword">implements</span> <span class="title">UserDao</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">queryUserByUsername</span><span class="params">(String username)</span> </span>&#123;</span><br><span class="line">        String sql = <span class="string">&quot;select id,username,password,email from t_user where username = ?&quot;</span>;</span><br><span class="line">        <span class="keyword">return</span> queryForOne(User.class, sql, username);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">queryUserByUsernameAndPassword</span><span class="params">(String username, String password)</span> </span>&#123;</span><br><span class="line">        String sql = <span class="string">&quot;select id,username,password,email from t_user where username = ? and password = ?&quot;</span>;</span><br><span class="line">        <span class="keyword">return</span> queryForOne(User.class, sql, username, password);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">saveUser</span><span class="params">(User user)</span> </span>&#123;</span><br><span class="line">        String sql = <span class="string">&quot;insert into t_user(username,password,email) values(?,?,?)&quot;</span>;</span><br><span class="line">        <span class="keyword">return</span> update(sql, user.getUsername(), user.getPassword(), user.getEmail());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="UserDao测试"><a href="#UserDao测试" class="headerlink" title="UserDao测试"></a>UserDao测试</h2><p>在<code>test</code>下创建<code>UserDaoTest</code>测试类 </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.atguigu.test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.atguigu.dao.UserDao;</span><br><span class="line"><span class="keyword">import</span> com.atguigu.dao.impl.UserDaoImpl;</span><br><span class="line"><span class="keyword">import</span> com.atguigu.pojo.User;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.junit.Assert.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserDaoTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    UserDao userDao = <span class="keyword">new</span> UserDaoImpl();</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">queryUserByUsername</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> ( userDao.queryUserByUsername(<span class="string">&quot;admin1234&quot;</span>) == <span class="keyword">null</span> ) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;用户名可用！&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span>&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;用户名已存在！&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">queryUserByUsernameAndPassword</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> ( userDao.queryUserByUsernameAndPassword(<span class="string">&quot;admin&quot;</span>, <span class="string">&quot;admin1234&quot;</span>) == <span class="keyword">null</span> ) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;用户名或密码错误，登录失败！&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span>&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;登录成功！&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">saveUser</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println( userDao.saveUser(<span class="keyword">new</span> User(<span class="keyword">null</span>, <span class="string">&quot;wzg169&quot;</span>, <span class="string">&quot;123456&quot;</span>, <span class="string">&quot;wzg169 @qq.com&quot;</span>)));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h1 id="编写-UserService-和-测试"><a href="#编写-UserService-和-测试" class="headerlink" title="编写 UserService 和 测试"></a>编写 UserService 和 测试</h1><p><code>UserService</code>更加抽象化，具体完成注册，登录，查询用户名是否存在操作，为<code>Servlet</code>程序提供服务。</p><h2 id="UserService接口"><a href="#UserService接口" class="headerlink" title="UserService接口"></a>UserService接口</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.atguigu.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.atguigu.pojo.User;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserService</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 注册用户</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> user</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">registUser</span><span class="params">(User user)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 登录</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> user</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 返回null是登录失败，返回有值是登录成功</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">login</span><span class="params">(User user)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 检查 用户名是否可用</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> username</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 返回 true 表示用户名已存在，返回 false 表示用户名可用</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">existsUsername</span><span class="params">(String username)</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="UserServiceImpl实现类"><a href="#UserServiceImpl实现类" class="headerlink" title="UserServiceImpl实现类"></a>UserServiceImpl实现类</h2><p><code>UserServiceImpl</code>实现<code>UseService</code>，底层实际是调用<code>UserDao</code>来进行操作</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.atguigu.service.impl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.atguigu.dao.UserDao;</span><br><span class="line"><span class="keyword">import</span> com.atguigu.dao.impl.UserDaoImpl;</span><br><span class="line"><span class="keyword">import</span> com.atguigu.pojo.User;</span><br><span class="line"><span class="keyword">import</span> com.atguigu.service.UserService;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserServiceImpl</span> <span class="keyword">implements</span> <span class="title">UserService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> UserDao userDao = <span class="keyword">new</span> UserDaoImpl();</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">registUser</span><span class="params">(User user)</span> </span>&#123;</span><br><span class="line">        userDao.saveUser(user);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">login</span><span class="params">(User user)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> userDao.queryUserByUsernameAndPassword(user.getUsername(), user.getPassword());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">existsUsername</span><span class="params">(String username)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (userDao.queryUserByUsername(username) == <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="UserService测试"><a href="#UserService测试" class="headerlink" title="UserService测试"></a>UserService测试</h2><p>在<code>test</code>下创建<code>UserServiceTest</code>测试类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.atguigu.test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.atguigu.pojo.User;</span><br><span class="line"><span class="keyword">import</span> com.atguigu.service.UserService;</span><br><span class="line"><span class="keyword">import</span> com.atguigu.service.impl.UserServiceImpl;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.junit.Assert.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserServiceTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    UserService userService = <span class="keyword">new</span> UserServiceImpl();</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">registUser</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        userService.registUser(<span class="keyword">new</span> User(<span class="keyword">null</span>, <span class="string">&quot;bbj168&quot;</span>, <span class="string">&quot;666666&quot;</span>, <span class="string">&quot;bbj168@qq.com&quot;</span>));</span><br><span class="line">        userService.registUser(<span class="keyword">new</span> User(<span class="keyword">null</span>, <span class="string">&quot;abc168&quot;</span>, <span class="string">&quot;666666&quot;</span>, <span class="string">&quot;abc 168@qq.com&quot;</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">login</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println( userService.login(<span class="keyword">new</span> User(<span class="keyword">null</span>, <span class="string">&quot;wzg168&quot;</span>, <span class="string">&quot;123456&quot;</span>, <span class="keyword">null</span>)));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">existsUsername</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (userService.existsUsername(<span class="string">&quot;wzg1688&quot;</span>))&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;用户名已存在！&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span>&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;用户名可用！&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h1 id="编写Web层"><a href="#编写Web层" class="headerlink" title="编写Web层"></a>编写Web层</h1><h2 id="实现用户注册的功能"><a href="#实现用户注册的功能" class="headerlink" title="实现用户注册的功能"></a>实现用户注册的功能</h2><h3 id="图解用户注册"><a href="#图解用户注册" class="headerlink" title="图解用户注册"></a>图解用户注册<img src="https://img-blog.csdnimg.cn/852bc4857b4b487e94df876dae14c336.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAbmVmdV9jYnc=,size_20,color_FFFFFF,t_70,g_se,x_16" alt="用户注册流程"></h3><h3 id="修改-regist-html-和-regist-success-html-页面"><a href="#修改-regist-html-和-regist-success-html-页面" class="headerlink" title="修改 regist.html 和 regist_success.html 页面"></a>修改 regist.html 和 regist_success.html 页面</h3><ol><li><p>添加<code>base</code>标签<br> 通过写<code>base</code>标签我们可用固定相对路径跳转的结果，这样可以让我们在写相对路径时更清晰，一般推荐这么做。<br><img src="https://img-blog.csdnimg.cn/616faae133a24974934e68840a83e54f.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAbmVmdV9jYnc=,size_20,color_FFFFFF,t_70,g_se,x_16" alt="base标签"></p></li><li><p>修改<code>base</code>标签对相对路径的影响<br>我们在添加完<code>base</code>标签之后需要对已有的相对路径进行修改，我们可以先重新部署服务器，之后看哪些资源失败了，来看需要修改哪个的相对路径。</p></li><li><p>修改注册表单的提交地址和请求方式<br><img src="https://img-blog.csdnimg.cn/290c0a8c9db94741b71660e89af07248.png" alt="修改注册表单"></p><h3 id="编写RegistServlet程序"><a href="#编写RegistServlet程序" class="headerlink" title="编写RegistServlet程序"></a>编写RegistServlet程序</h3></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.atguigu.web;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.atguigu.pojo.User;</span><br><span class="line"><span class="keyword">import</span> com.atguigu.service.UserService;</span><br><span class="line"><span class="keyword">import</span> com.atguigu.service.impl.UserServiceImpl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RegistServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> UserService userService = <span class="keyword">new</span> UserServiceImpl();</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException</span>&#123;</span><br><span class="line">        <span class="comment">// 1. 获取请求的参数</span></span><br><span class="line">        String username = req.getParameter(<span class="string">&quot;username&quot;</span>);</span><br><span class="line">        String password = req.getParameter(<span class="string">&quot;password&quot;</span>);</span><br><span class="line">        String email = req.getParameter(<span class="string">&quot;email&quot;</span>);</span><br><span class="line">        String code = req.getParameter(<span class="string">&quot;code&quot;</span>);</span><br><span class="line"><span class="comment">//        System.out.println(code);</span></span><br><span class="line">        <span class="comment">// 2. 验证验证码是否正确 === 写死，要求验证码为:abcde</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="string">&quot;abcde&quot;</span>.equalsIgnoreCase(code))&#123;</span><br><span class="line">            <span class="comment">// 正确</span></span><br><span class="line">            <span class="comment">// 3. 检查用户名是否可用</span></span><br><span class="line">            <span class="keyword">if</span> (userService.existsUsername(username))&#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;用户名[&quot;</span> + username + <span class="string">&quot;]已存在！&quot;</span>);</span><br><span class="line">                <span class="comment">// 跳回注册页面</span></span><br><span class="line">                req.getRequestDispatcher(<span class="string">&quot;/pages/user/regist.html&quot;</span>).forward(req, resp);</span><br><span class="line">            &#125; <span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="comment">// 可用，调用Service保存到数据库</span></span><br><span class="line">                userService.registUser(<span class="keyword">new</span> User(<span class="keyword">null</span>, username, password, email));</span><br><span class="line">                <span class="comment">// 跳到注册成功页面</span></span><br><span class="line">                req.getRequestDispatcher(<span class="string">&quot;/pages/user/regist_success.html&quot;</span>).forward(req, resp);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span>&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;验证码[&quot;</span> + code + <span class="string">&quot;]错误&quot;</span>);</span><br><span class="line">            req.getRequestDispatcher(<span class="string">&quot;/pages/user/regist.html&quot;</span>).forward(req, resp);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="配置Servlet映射"><a href="#配置Servlet映射" class="headerlink" title="配置Servlet映射"></a>配置Servlet映射</h3><p>在<code>web.xml</code>中添加如下语句</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>RegistServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>com.atguigu.web.RegistServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>RegistServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/registServlet<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="实现用户登录的功能"><a href="#实现用户登录的功能" class="headerlink" title="实现用户登录的功能"></a>实现用户登录的功能</h2><h3 id="图解用户登录"><a href="#图解用户登录" class="headerlink" title="图解用户登录"></a>图解用户登录</h3><p><img src="https://img-blog.csdnimg.cn/05ddba7580b04f148b52e8ac76474d2e.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAbmVmdV9jYnc=,size_20,color_FFFFFF,t_70,g_se,x_16" alt="用户登录的流程"></p><h3 id="修改-login-html-页面和-login-success-html-页面"><a href="#修改-login-html-页面和-login-success-html-页面" class="headerlink" title="修改 login.html 页面和 login_success.html 页面"></a>修改 login.html 页面和 login_success.html 页面</h3><ol><li>添加<code>base</code>标签</li><li> 修改<code>base</code>标签对相对路径的影响</li><li>修改注册表单的提交地址和请求方式<br><img src="https://img-blog.csdnimg.cn/0644fcbf87af44e384c37d5c9a3ed36c.png" alt="修改登录表单"><h3 id="编写-LoginServlet-程序"><a href="#编写-LoginServlet-程序" class="headerlink" title="编写 LoginServlet 程序"></a>编写 LoginServlet 程序</h3></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.atguigu.web;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.atguigu.pojo.User;</span><br><span class="line"><span class="keyword">import</span> com.atguigu.service.UserService;</span><br><span class="line"><span class="keyword">import</span> com.atguigu.service.impl.UserServiceImpl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LoginServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> UserService userService = <span class="keyword">new</span> UserServiceImpl();</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 1. 获取请求的参数</span></span><br><span class="line">        String username = req.getParameter(<span class="string">&quot;username&quot;</span>);</span><br><span class="line">        String password = req.getParameter(<span class="string">&quot;password&quot;</span>);</span><br><span class="line">        <span class="comment">// 2. userService.login()登录处理业务</span></span><br><span class="line">        User loginUser = userService.login(<span class="keyword">new</span> User( <span class="keyword">null</span>, username, password, <span class="keyword">null</span>));</span><br><span class="line">        <span class="comment">// 如果等于null，说明登录失败！</span></span><br><span class="line">        <span class="keyword">if</span> (loginUser == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="comment">// 跳回登录页面</span></span><br><span class="line">            req.getRequestDispatcher(<span class="string">&quot;/pages/user/login.html&quot;</span>).forward(req, resp);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// 登录 成功</span></span><br><span class="line">            <span class="comment">// 跳到成功页面login_success.html</span></span><br><span class="line">            req.getRequestDispatcher(<span class="string">&quot;/pages/user/login_success.html&quot;</span>).forward(req, resp);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="配置Servlet映射-1"><a href="#配置Servlet映射-1" class="headerlink" title="配置Servlet映射"></a>配置Servlet映射</h3><p>在<code>web.xml</code>中添加如下语句</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>LoginServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>com.atguigu.web.LoginServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>LoginServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/loginServlet<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> JavaWeb书城项目 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>JavaWeb书城项目(一)——表单验证的实现</title>
      <link href="/2021/10/30/JavaWeb_BookProject_1/"/>
      <url>/2021/10/30/JavaWeb_BookProject_1/</url>
      
        <content type="html"><![CDATA[<blockquote><p>表单验证主要使用JQuery实现，IDE为IDEA</p></blockquote><h1 id="导入项目"><a href="#导入项目" class="headerlink" title="导入项目"></a>导入项目</h1><p>新建一个模块<br><img src="https://img-blog.csdnimg.cn/087aef774e5f4e41aa97d612a5fa27a1.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAbmVmdV9jYnc=,size_20,color_FFFFFF,t_70,g_se,x_16" alt="新建模块"></p><span id="more"></span><p>把原有的文件导入，<a href="https://pan.baidu.com/share/init?surl=VhoiXQTMKeTCaNK6JTba4g">原有文件链接 提取码:nefu</a><br><img src="https://img-blog.csdnimg.cn/ccc1a7437bf7425f81461ec663e56400.png" alt="导入文件"><br>接下来我们要修改login.html以及regist.html<br><img src="https://img-blog.csdnimg.cn/943f53229aa646aea9d34d53e5087ab1.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAbmVmdV9jYnc=,size_12,color_FFFFFF,t_70,g_se,x_16" alt="login与regist"><br>把 <code>jquery.js</code> 放入<code>static/script</code> 文件夹下<br><img src="https://img-blog.csdnimg.cn/3352236662a749e1a5c3e7b853876238.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAbmVmdV9jYnc=,size_11,color_FFFFFF,t_70,g_se,x_16" alt="导入jquery.js"></p><hr><h1 id="regist部分"><a href="#regist部分" class="headerlink" title="regist部分"></a>regist部分</h1><p>我们要验证表单内容，主要有以下几个部分<br><img src="https://img-blog.csdnimg.cn/2cbfdfb17a364d1a8961f0dac2c21718.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAbmVmdV9jYnc=,size_17,color_FFFFFF,t_70,g_se,x_16" alt="注册表单"></p><ul><li>验证用户名：必须由字母，数字下划线组成，并且长度为5到12位</li><li>验证密码：必须由字母，数字下划线组成，并且长度为5到12位</li><li>验证确认密码：和密码相同</li><li>邮箱验证；<a href="mailto:&#120;&#x78;&#x78;&#120;&#x78;&#x40;&#120;&#120;&#120;&#46;&#99;&#111;&#109;">&#120;&#x78;&#x78;&#120;&#x78;&#x40;&#120;&#120;&#120;&#46;&#99;&#111;&#109;</a></li><li>验证码：现在只需要验证用户已输入</li></ul><p>具体大致流程如下：</p><ol><li><code>$(#id).val()</code> 获得表单项的值</li><li> <code>/ /</code> 创建正则项表达式</li><li>使用 <code>test</code> 方法测试</li><li><code>$(&quot;span.errorMsg&quot;).text(&quot;提示信息&quot;)</code> 提示用户</li></ol><p>以用户名为例，具体代码如下</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 验证用户名：必须由字母，数字下划线组成，并且长度为5到12位</span></span><br><span class="line"><span class="comment">//1 获取用户名输入框里的内容</span></span><br><span class="line"><span class="keyword">var</span> usernameText = $(<span class="string">&#x27;#username&#x27;</span>).val();</span><br><span class="line"><span class="comment">//2 创建正则表达式对象</span></span><br><span class="line"><span class="keyword">var</span> usernamePatt = <span class="regexp">/^\w&#123;5,12&#125;$/</span>;</span><br><span class="line"><span class="comment">//3 使用test方法验证</span></span><br><span class="line"><span class="keyword">if</span>(!usernamePatt.test(usernameText)) &#123;</span><br><span class="line"><span class="comment">//4 提示用户结果</span></span><br><span class="line">$(<span class="string">&quot;span.errorMsg&quot;</span>).text(<span class="string">&quot;用户名不合法！&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>; <span class="comment">// 让其不跳转</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>需要注意的是，全部验证完之后，不应该出现错误信息，所以使用 <code>$(&quot;span.errorMsg&quot;).text(&quot;&quot;)</code> 将其清空。<br><strong>regist.html 全部代码如下</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>尚硅谷会员注册页面<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;../../static/css/style.css&quot;</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;../../static/script/jquery-1.7.2.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript"><span class="comment">// 页面加载完成之后</span></span></span><br><span class="line"><span class="javascript">$(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">$(<span class="string">&quot;#sub_btn&quot;</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript"><span class="comment">// 验证用户名：必须由字母，数字下划线组成，并且长度为5到12位</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//1 获取用户名输入框里的内容</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> usernameText = $(<span class="string">&#x27;#username&#x27;</span>).val();</span></span><br><span class="line"><span class="javascript"><span class="comment">//2 创建正则表达式对象</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> usernamePatt = <span class="regexp">/^\w&#123;5,12&#125;$/</span>;</span></span><br><span class="line"><span class="javascript"><span class="comment">//3 使用test方法验证</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">if</span>(!usernamePatt.test(usernameText)) &#123;</span></span><br><span class="line"><span class="javascript"><span class="comment">//4 提示用户结果</span></span></span><br><span class="line"><span class="javascript">$(<span class="string">&quot;span.errorMsg&quot;</span>).text(<span class="string">&quot;用户名不合法！&quot;</span>);</span></span><br><span class="line"><span class="javascript"><span class="keyword">return</span> <span class="literal">false</span>; <span class="comment">// 让其不跳转</span></span></span><br><span class="line"><span class="javascript">&#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript"><span class="comment">// 验证密码：必须由字母，数字下划线组成，并且长度为5到12位</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//1 获取密码输入框里的内容</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> passwordText = $(<span class="string">&#x27;#password&#x27;</span>).val();</span></span><br><span class="line"><span class="javascript"><span class="comment">//2 创建正则表达式对象</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> passwordPatt = <span class="regexp">/^\w&#123;5,12&#125;$/</span>;</span></span><br><span class="line"><span class="javascript"><span class="comment">//3 使用test方法验证</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">if</span>(!passwordPatt.test(passwordText)) &#123;</span></span><br><span class="line"><span class="javascript"><span class="comment">//4 提示用户结果</span></span></span><br><span class="line"><span class="javascript">$(<span class="string">&quot;span.errorMsg&quot;</span>).text(<span class="string">&quot;密码不合法！&quot;</span>);</span></span><br><span class="line"><span class="javascript"><span class="keyword">return</span> <span class="literal">false</span>; <span class="comment">// 让其不跳转</span></span></span><br><span class="line"><span class="javascript">&#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript"><span class="comment">// 验证确认密码：和密码相同</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//1 获取确认密码内容</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> repwdText = $(<span class="string">&quot;#repwd&quot;</span>).val();</span></span><br><span class="line"><span class="javascript"><span class="comment">//2 与密码相比较</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">if</span>(repwdText != passwordText)&#123;</span></span><br><span class="line"><span class="javascript"><span class="comment">//3 提示用户</span></span></span><br><span class="line"><span class="javascript">$(<span class="string">&quot;span.errorMsg&quot;</span>).text(<span class="string">&quot;确认密码和密码不一致！&quot;</span>);</span></span><br><span class="line"><span class="javascript"><span class="keyword">return</span> <span class="literal">false</span>;</span></span><br><span class="line"><span class="javascript">&#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript"><span class="comment">// 邮箱验证；xxxxx@xxx.com</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//1 获取邮箱里的内容</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> emailText = $(<span class="string">&quot;#email&quot;</span>).val();</span></span><br><span class="line"><span class="javascript"><span class="comment">//2 创建正则表达式对象</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> emailPatt = <span class="regexp">/^[a-z\d]+(\.[a-z\d]+)*@([\da-z](-[\da-z])?)+(\.&#123;1,2&#125;[a-z]+)+$/</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//3 使用test方法测试</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">if</span>(!emailPatt.test(emailText)) &#123;</span></span><br><span class="line"><span class="javascript"><span class="comment">//4 提示用户</span></span></span><br><span class="line"><span class="javascript">$(<span class="string">&quot;span.errorMsg&quot;</span>).text(<span class="string">&quot;邮箱不合法！&quot;</span>);</span></span><br><span class="line"><span class="javascript"><span class="keyword">return</span> <span class="literal">false</span>;</span></span><br><span class="line"><span class="javascript">&#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript"><span class="comment">// 验证码：现在只需要验证用户已输入，因为还没讲到服务器，验证码生成。</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> codeText = $(<span class="string">&quot;#code&quot;</span>).val();</span></span><br><span class="line"><span class="javascript"><span class="comment">// alert(&quot;去空格前&quot;+codeText);</span></span></span><br><span class="line"><span class="javascript">codeText = $.trim(codeText); <span class="comment">// 去除多余的空格</span></span></span><br><span class="line"><span class="javascript"><span class="comment">// alert(&quot;去空格后&quot;+codeText);</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">if</span> (codeText == <span class="literal">null</span> || codeText == <span class="string">&quot;&quot;</span>)&#123;</span></span><br><span class="line"><span class="javascript"><span class="comment">// 提示用户</span></span></span><br><span class="line"><span class="javascript">$(<span class="string">&quot;span.errorMsg&quot;</span>).text(<span class="string">&quot;验证码不能为空！&quot;</span>);</span></span><br><span class="line"><span class="javascript"><span class="keyword">return</span> <span class="literal">false</span>;</span></span><br><span class="line"><span class="javascript">&#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">$(<span class="string">&quot;span.errorMsg&quot;</span>).text(<span class="string">&quot;&quot;</span>); <span class="comment">//合法将不合法信息去除</span></span></span><br><span class="line"><span class="javascript">&#125;);</span></span><br><span class="line"><span class="javascript">&#125;);</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css"><span class="selector-class">.login_form</span>&#123;</span></span><br><span class="line"><span class="css"><span class="attribute">height</span>:<span class="number">420px</span>;</span></span><br><span class="line"><span class="css"><span class="attribute">margin-top</span>: <span class="number">25px</span>;</span></span><br><span class="line"><span class="css">&#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;login_header&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">class</span>=<span class="string">&quot;logo_img&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> <span class="attr">src</span>=<span class="string">&quot;../../static/img/logo.gif&quot;</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;login_banner&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;l_content&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;login_word&quot;</span>&gt;</span>欢迎注册<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;content&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;login_form&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;login_box&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;tit&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>注册尚硅谷会员<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;errorMsg&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;regist_success.html&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">label</span>&gt;</span>用户名称：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">&quot;itxt&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入用户名&quot;</span> <span class="attr">autocomplete</span>=<span class="string">&quot;off&quot;</span> <span class="attr">tabindex</span>=<span class="string">&quot;1&quot;</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">id</span>=<span class="string">&quot;username&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">label</span>&gt;</span>用户密码：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">&quot;itxt&quot;</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入密码&quot;</span> <span class="attr">autocomplete</span>=<span class="string">&quot;off&quot;</span> <span class="attr">tabindex</span>=<span class="string">&quot;1&quot;</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">id</span>=<span class="string">&quot;password&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">label</span>&gt;</span>确认密码：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">&quot;itxt&quot;</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;确认密码&quot;</span> <span class="attr">autocomplete</span>=<span class="string">&quot;off&quot;</span> <span class="attr">tabindex</span>=<span class="string">&quot;1&quot;</span> <span class="attr">name</span>=<span class="string">&quot;repwd&quot;</span> <span class="attr">id</span>=<span class="string">&quot;repwd&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">label</span>&gt;</span>电子邮件：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">&quot;itxt&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入邮箱地址&quot;</span> <span class="attr">autocomplete</span>=<span class="string">&quot;off&quot;</span> <span class="attr">tabindex</span>=<span class="string">&quot;1&quot;</span> <span class="attr">name</span>=<span class="string">&quot;email&quot;</span> <span class="attr">id</span>=<span class="string">&quot;email&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">label</span>&gt;</span>验证码：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">&quot;itxt&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">style</span>=<span class="string">&quot;width: 150px;&quot;</span> <span class="attr">id</span>=<span class="string">&quot;code&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> <span class="attr">src</span>=<span class="string">&quot;../../static/img/code.bmp&quot;</span> <span class="attr">style</span>=<span class="string">&quot;float: right; margin-right: 40px&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;注册&quot;</span> <span class="attr">id</span>=<span class="string">&quot;sub_btn&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;bottom&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span></span><br><span class="line">尚硅谷书城.Copyright <span class="symbol">&amp;copy;</span>2015</span><br><span class="line"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>演示结果</strong><br><img src="https://img-blog.csdnimg.cn/a11b2ccd916943cbaa6b8dab05a66597.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAbmVmdV9jYnc=,size_20,color_FFFFFF,t_70,g_se,x_16" alt="结果"></p><hr><h1 id="login部分"><a href="#login部分" class="headerlink" title="login部分"></a>login部分</h1><p>login部分也是一样的思路，因为表单标签没有提供 <code>id</code>，我们要为其添加一个<code>id</code> 标签，即修改原始代码如下</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;username&quot;</span> <span class="attr">class</span>=<span class="string">&quot;itxt&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入用户名&quot;</span> <span class="attr">autocomplete</span>=<span class="string">&quot;off&quot;</span> <span class="attr">tabindex</span>=<span class="string">&quot;1&quot;</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;password&quot;</span> <span class="attr">class</span>=<span class="string">&quot;itxt&quot;</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入密码&quot;</span> <span class="attr">autocomplete</span>=<span class="string">&quot;off&quot;</span> <span class="attr">tabindex</span>=<span class="string">&quot;1&quot;</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><p>后面就和注册一样的思路，利用 <code>JQuery</code> 验证表单即可。<br><strong>login.html 全部代码如下</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>尚硅谷会员登录页面<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;../../static/css/style.css&quot;</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;../../static/script/jquery-1.7.2.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript"><span class="comment">// 页面加载完成之后</span></span></span><br><span class="line"><span class="javascript">$(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">$(<span class="string">&quot;#sub_btn&quot;</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript"><span class="comment">// 验证用户名：必须由字母，数字下划线组成，并且长度为5到12位</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//1 获取用户名输入框里的内容</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> usernameText = $(<span class="string">&quot;#username&quot;</span>).val();</span></span><br><span class="line"><span class="javascript"><span class="comment">//2 创建正则表达式对象</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> usernamePatt = <span class="regexp">/^\w&#123;5,12&#125;$/</span>;</span></span><br><span class="line"><span class="javascript"><span class="comment">//3 使用test方法验证</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">if</span>(!usernamePatt.test(usernameText)) &#123;</span></span><br><span class="line"><span class="javascript"><span class="comment">//4 提示用户结果</span></span></span><br><span class="line"><span class="javascript">$(<span class="string">&quot;span.errorMsg&quot;</span>).text(<span class="string">&quot;用户名不合法！&quot;</span>);</span></span><br><span class="line"><span class="javascript"><span class="keyword">return</span> <span class="literal">false</span>; <span class="comment">// 让其不跳转</span></span></span><br><span class="line"><span class="javascript">&#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript"><span class="comment">// 验证密码：必须由字母，数字下划线组成，并且长度为5到12位</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//1 获取密码输入框里的内容</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> passwordText = $(<span class="string">&quot;#password&quot;</span>).val();</span></span><br><span class="line"><span class="javascript"><span class="comment">//2 创建正则表达式对象</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> passwordPatt = <span class="regexp">/^\w&#123;5,12&#125;$/</span>;</span></span><br><span class="line"><span class="javascript"><span class="comment">//3 使用test方法验证</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">if</span>(!passwordPatt.test(passwordText)) &#123;</span></span><br><span class="line"><span class="javascript"><span class="comment">//4 提示用户结果</span></span></span><br><span class="line"><span class="javascript">$(<span class="string">&quot;span.errorMsg&quot;</span>).text(<span class="string">&quot;密码不合法！&quot;</span>);</span></span><br><span class="line"><span class="javascript"><span class="keyword">return</span> <span class="literal">false</span>; <span class="comment">// 让其不跳转</span></span></span><br><span class="line"><span class="javascript">&#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">$(<span class="string">&quot;span.errorMsg&quot;</span>).text(<span class="string">&quot;&quot;</span>); <span class="comment">//合法将不合法信息去除</span></span></span><br><span class="line"><span class="javascript">&#125;);</span></span><br><span class="line"><span class="javascript">&#125;);</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;login_header&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">class</span>=<span class="string">&quot;logo_img&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> <span class="attr">src</span>=<span class="string">&quot;../../static/img/logo.gif&quot;</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;login_banner&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;l_content&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;login_word&quot;</span>&gt;</span>欢迎登录<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;content&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;login_form&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;login_box&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;tit&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>尚硅谷会员<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;regist.html&quot;</span>&gt;</span>立即注册<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;msg_cont&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">b</span>&gt;</span><span class="tag">&lt;/<span class="name">b</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;errorMsg&quot;</span>&gt;</span>请输入用户名和密码<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;login_success.html&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">label</span>&gt;</span>用户名称：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;username&quot;</span> <span class="attr">class</span>=<span class="string">&quot;itxt&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入用户名&quot;</span> <span class="attr">autocomplete</span>=<span class="string">&quot;off&quot;</span></span></span><br><span class="line"><span class="tag">   <span class="attr">tabindex</span>=<span class="string">&quot;1&quot;</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">label</span>&gt;</span>用户密码：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;password&quot;</span> <span class="attr">class</span>=<span class="string">&quot;itxt&quot;</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入密码&quot;</span> <span class="attr">autocomplete</span>=<span class="string">&quot;off&quot;</span></span></span><br><span class="line"><span class="tag">   <span class="attr">tabindex</span>=<span class="string">&quot;1&quot;</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;登录&quot;</span> <span class="attr">id</span>=<span class="string">&quot;sub_btn&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;bottom&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span></span><br><span class="line">尚硅谷书城.Copyright <span class="symbol">&amp;copy;</span>2015</span><br><span class="line"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>演示结果</strong><br><img src="https://img-blog.csdnimg.cn/825385f7bb5947c4a97dd9d04e1ec1c0.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAbmVmdV9jYnc=,size_20,color_FFFFFF,t_70,g_se,x_16" alt="结果"></p>]]></content>
      
      
      <categories>
          
          <category> JavaWeb书城项目 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaWeb前端 </tag>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C和指针学习笔记(四)——内存操作</title>
      <link href="/2021/10/28/C-note-4/"/>
      <url>/2021/10/28/C-note-4/</url>
      
        <content type="html"><![CDATA[<blockquote><p>这个系列主要是我学习《C和指针》这本书的一些笔记，主要关于一些小的细节，目的是供自己学习和参考，详细地部分建议大家可以阅读一下《C和指针》这本书</p></blockquote><hr><p>根据定义，字符串由一个 <code>NUL</code> 字节结尾，所以字符串内部不能包含任何 <code>NUL</code> 字符。但是，非字符串数据内部包含零值的情况并不罕见。我们无法使用字符串函数来处理这种类型的数据，因为当它们遇到第 <strong>1</strong> 个 <code>NUL</code> 字节时将停止工作。<br>不过，我们可以使用另外一组相关的函数，它们的操作与字符串函数类似，但这些函数能够处理任意的字节序列。下面是它们的原型：</p><span id="more"></span><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> *<span class="title">memcpy</span><span class="params">( <span class="keyword">void</span> *dst, <span class="keyword">void</span> <span class="keyword">const</span> *src, <span class="keyword">size_t</span> length )</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> *<span class="title">memmove</span><span class="params">( <span class="keyword">void</span> *dst, <span class="keyword">void</span> <span class="keyword">const</span> *src, <span class="keyword">size_t</span> length )</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> *<span class="title">memcmp</span><span class="params">( <span class="keyword">void</span> <span class="keyword">const</span> *a, <span class="keyword">void</span> <span class="keyword">const</span> *b, <span class="keyword">size_t</span> length )</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> *<span class="title">memchr</span><span class="params">( <span class="keyword">void</span> <span class="keyword">const</span> *a, <span class="keyword">int</span> ch, <span class="keyword">size_t</span> length )</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> *<span class="title">memset</span><span class="params">( <span class="keyword">void</span> *a, <span class="keyword">int</span> ch, <span class="keyword">size_t</span> length )</span></span>;</span><br></pre></td></tr></table></figure><p>每个原型都包含一个显式的参数来说明需要处理的字节数。但和 <code>strn</code> 带头的函数不同，它们在遇到 <code>NUL</code> 字节时并不会停止操作。</p><hr><h1 id="memcpy"><a href="#memcpy" class="headerlink" title="memcpy"></a>memcpy</h1><p><code>memcpy</code> 从 <code>src</code> 的起始位置复制 <code>length</code> 个字节到 <code>dst</code> 的内存起始位置。可以用这种方式复制任何类型的值，第 <strong>3</strong> 个参数指定复制值的长度（以字节计）。如果 <code>src</code> 和 <code>dst</code> 以任何形式出现了重叠，它的结果是未定义的。<br><strong>例如</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">char</span> temp[SIZE], values[SIZE];</span><br><span class="line">...</span><br><span class="line"><span class="built_in">memcpy</span>( temp, values, SIZE );</span><br></pre></td></tr></table></figure><p>它从数组 <code>values</code> 复制 <code>SIZE</code> 个字节到数组 <code>temp</code>。<br>但是，如果两个数组都是整型数组该怎么办呢？下面的语句可以完成这项任务：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">memcpy</span>( temp, values, <span class="keyword">sizeof</span>( valies ) );</span><br></pre></td></tr></table></figure><p>前两个参数并不需要强制类型转换，因为在函数的原型中，参数的类型是 <code>void*</code> 型指针，而任何类型的指针都可以转换为 <code>void*</code> 型指针。<br>如果数组只有部分内容需要复制，那么需要复制的数量必须在第 <strong>3</strong> 个参数中指明。对于长度大于一个字节的数据，要确保把数量和数据类型的长度相乘，例如：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">memcpy</span>( saved_answers, answers, count * <span class="keyword">sizeof</span>( answers[<span class="number">0</span>] ) ); </span><br></pre></td></tr></table></figure><p>也可以用这种技巧复制结构或结构数组。</p><hr><h1 id="memmove"><a href="#memmove" class="headerlink" title="memmove"></a>memmove</h1><p> <code>memmove</code> 函数的行为和 <code>memcpy</code> 差不多，只是它的源操作数和目标操作数可以重叠。虽然它并不需要以下面这种方法实现，但 <code>memmove</code> 的结果和这种方法的结果相同：<strong>把源操作数复制到一个临时位置，这个临时位置不会与源或目标操作数重叠，然后再把它从这个临时位置复制到目标操作数</strong>。<br> <code>memmove</code>通常无法使用某些机器所提供的特殊的字节-字符串处理指令来实现，所以它可能比 <code>memcpy</code> 慢一些。但是，如果源和目标参数真的可能存在重叠，就应该使用 <code>memmove</code>，如下例所示：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">** Shift the values in the x array left one position.</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">memmove( x, x + <span class="number">1</span>, ( count - <span class="number">1</span> ) * <span class="keyword">sizeof</span>( x[ <span class="number">0</span> ] ) );</span><br></pre></td></tr></table></figure><hr><h1 id="memcmp"><a href="#memcmp" class="headerlink" title="memcmp"></a>memcmp</h1><p><code>memcmp</code> 对两段内存中的内容进行比较，这两段内存分别起始于 <code>a</code> 和 <code>b</code>，共比较 <code>length</code> 个字节。这些值按照无符号字符逐字节进行比较，函数的返回类型和 <code>strcmp</code> 函数一样——负值表示 <code>a</code> 小于 <code>b</code>，正值表示 <code>a</code> 大于 <code>b</code>，零表示 <code>a</code> 等于 <code>b</code>。由于这些值是根据一串无符号字节进行比较的，因此如果 <code>memcmp</code> 函数用于比较不是单字节的数据（如整数或浮点数），就可能给出不可预料的结果，</p><hr><h1 id="memchr"><a href="#memchr" class="headerlink" title="memchr"></a>memchr</h1><p><code>memchr</code> 从 <code>a</code> 的起始位置开始查找字符 <code>ch</code> 第 <strong>1</strong> 次出现的位置，并返回一个指向该位置的指针，它共查找 <code>length</code> 个字节。如果在这 <code>length</code> 个字节中未找到该字符，函数就返回一个 <code>NULL</code> 指针。</p><hr><h1 id="memset"><a href="#memset" class="headerlink" title="memset"></a>memset</h1><p><code>memset</code> 函数把从 <code>a</code> 开始的 <code>length</code> 个字节都设置为字符值 <code>ch</code>。例如:</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">memset</span>( buffer, <span class="number">0</span>, SIZE );</span><br></pre></td></tr></table></figure><p>把 <code>buffer</code>的前 <code>SIZE</code> 个字节都初始化为 <code>0</code>。</p>]]></content>
      
      
      <categories>
          
          <category> C </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C </tag>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C和指针学习笔记(三)——字符操作</title>
      <link href="/2021/10/28/C-note-3/"/>
      <url>/2021/10/28/C-note-3/</url>
      
        <content type="html"><![CDATA[<blockquote><p>这个系列主要是我学习《C和指针》这本书的一些笔记，主要关于一些小的细节，目的是供自己学习和参考，详细地部分建议大家可以阅读一下《C和指针》这本书</p></blockquote><hr><h1 id="字符分类"><a href="#字符分类" class="headerlink" title="字符分类"></a>字符分类</h1><p>每个分类函数接受一个包含字符值的整型参数。函数测试这个字符并返回一个整型值，表示真或假。下表列出了这些字符分类函数以及它们每个所执行的测试。</p><span id="more"></span><table><thead><tr><th>函数</th><th>如果它的参数符合下列条件就返回真</th></tr></thead><tbody><tr><td>iscntrl</td><td>任何控制字符</td></tr><tr><td>isspace</td><td>空白字符：空格’ ‘、换页 ‘\f’、换行’\n’、回车’\r’、制表符’\t’ 或垂直制表符’\v’</td></tr><tr><td>isdigit</td><td>十进制数字 0~9</td></tr><tr><td>isxdigit</td><td>十六进制数字，包括所有十进制数字、小写字母 a~f、大写字母 A~F</td></tr><tr><td>islower</td><td>小写字母 a~z</td></tr><tr><td>isupper</td><td>大写字母 A~Z</td></tr><tr><td>isalpha</td><td>字母 a~z 或 A~Z</td></tr><tr><td>isalnum</td><td>字母或数字 (a~z、A~Z 或 0~9)</td></tr><tr><td>ispunct</td><td>标点符号，任何不属于数字或字母的图形字符（可打印字符）</td></tr><tr><td>isgraph</td><td>任何图形字符</td></tr><tr><td>isprint</td><td>任何可打印字符，包括图形字符和空白字符</td></tr></tbody></table><h1 id="字符转换"><a href="#字符转换" class="headerlink" title="字符转换"></a>字符转换</h1><p>转换函数用于把大写字母转换为小写字母或者把小写字母转换为大写字母、</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">tolower</span><span class="params">( <span class="keyword">int</span> ch )</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">toupper</span><span class="params">( <span class="keyword">int</span> ch )</span></span>;</span><br></pre></td></tr></table></figure><p><code>toupper</code> 函数返回其参数的对应大写形式，<code>tolower</code> 函数返回其参数的对应小写形式。如果函数的参数并不是一个处于适当大小写状态的字符（即 <code>toupper</code> 的参数不是小写字母或 <code>tolower</code>的参数不是个大写字母），函数将不修改参数，而是直接返回。<br><strong>注意</strong><br>直接测试或操作字符会降低程序的可移植性。例如，考虑下面这条语句，它试图测试 <code>ch</code>是否是一个大写字符。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>( ch &gt;= <span class="string">&#x27;A&#x27;</span> &amp;&amp; ch &lt;= <span class="string">&#x27;Z&#x27;</span> )</span><br></pre></td></tr></table></figure><p>   这条语句在使用 <code>ASCII</code> 字符集的机器上能够运行，但在使用 <code>EBCDIC</code> 字符集的机器上将会失败。另外，下面这条语句</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>( <span class="built_in">isupper</span>( ch ) )</span><br></pre></td></tr></table></figure><p>无论机器使用哪个字符集，它都能顺利运行。</p>]]></content>
      
      
      <categories>
          
          <category> C </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C </tag>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C和指针学习笔记(二)——字符串常用库函数</title>
      <link href="/2021/10/28/C-note-2/"/>
      <url>/2021/10/28/C-note-2/</url>
      
        <content type="html"><![CDATA[<blockquote><p>这个系列主要是我学习《C和指针》这本书的一些笔记，主要关于一些小的细节，目的是供自己学习和参考，详细地部分建议大家可以阅读一下《C和指针》这本书</p></blockquote><hr><h1 id="字符串长度"><a href="#字符串长度" class="headerlink" title="字符串长度"></a>字符串长度</h1><p>库函数 <code>strlen</code> 的原型如下:</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">size_t</span> <span class="title">strlen</span><span class="params">( <span class="keyword">char</span> <span class="keyword">const</span> *<span class="built_in">string</span> )</span></span>;</span><br></pre></td></tr></table></figure><p>注意 <code>strlen</code> 返回一个类似为 <code>size_t</code> 的值。这个类型是在头文件 <code>stddef.h</code> 中定义的，它是一个无符号整数类型。在表达式中使用无符号数可能导致不可预料的结果。例如，下面两个表达式看上去是相等的：</p><span id="more"></span><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>( <span class="built_in">strlen</span>( x ) &gt;= <span class="built_in">strlen</span>( y ) ) ...</span><br><span class="line"><span class="keyword">if</span>( <span class="built_in">strlen</span>( x ) - <span class="built_in">strlen</span>( y ) &gt;= <span class="number">0</span> ) ...</span><br></pre></td></tr></table></figure><p>但事实上它们是不相等的。第 <strong>1</strong> 条语句将按照你预想的那样工作，但第 <strong>2</strong> 条语句的结果将永远是真。<code>strlen</code> 的结果是个无符号数，所以操作符 <code>&gt;=</code> 左边的表达式也将是无符号数，而无符号数绝不可能是负的。<br><strong>一个栗子</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> s[] = <span class="string">&quot;123456&quot;</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, <span class="built_in">strlen</span>(s)); <span class="comment">//输出6</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h1 id="不受限制的字符串函数"><a href="#不受限制的字符串函数" class="headerlink" title="不受限制的字符串函数"></a>不受限制的字符串函数</h1><p>最常用的字符串都是 “不受限制” 的，也就是说它们只是通过寻找字符串参数结尾的 <code>NUL</code> 字节来判断它的长度，这些函数一般都指定一块内存用于存放结果字符串。在使用这些函数时，程序员必须保证结果字符串不会溢出这块内存。</p><h2 id="复制字符串"><a href="#复制字符串" class="headerlink" title="复制字符串"></a>复制字符串</h2><p>用于复制字符串的函数是 <code>strcpy</code> ，它的原型如下所示：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">char</span> *<span class="title">strcpy</span><span class="params">( <span class="keyword">char</span> *dst, <span class="keyword">char</span> <span class="keyword">const</span> *src )</span></span>;</span><br></pre></td></tr></table></figure><p>这个函数把参数 <code>src</code> 字符串复制到 <code>dst</code> 参数，返回结果为一个指向目标字符数组的指针。如果参数 <code>src</code> 和 <code>dst</code> 在内存中出现重叠，其结果是未定义的。由于 <code>dst</code> 参数将进行修改，因此它必须是个字符数组或者是一个指向动态分配内存的数组的指针，不能使用字符串常量。<br><strong>需要注意目标字符数组的空间足以容纳需要复制的字符串。否则将会覆盖数组后面的内存空间的值。</strong><br><strong>一个栗子</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> s1[] = <span class="string">&quot;123456&quot;</span>;</span><br><span class="line">    <span class="keyword">char</span> s2[] = <span class="string">&quot;890&quot;</span>;</span><br><span class="line">    <span class="built_in">strcpy</span>(s1, s2);</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>; s1[i]; ++i)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>, s1[i]); <span class="comment">//输出 890</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><hr><h2 id="连接字符串"><a href="#连接字符串" class="headerlink" title="连接字符串"></a>连接字符串</h2><p>要想把一个字符串添加（连接）到另一个字符串的后面，可以使用 <code>strcat</code> 函数。它的原型如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">char</span> *<span class="title">strcat</span><span class="params">( <span class="keyword">char</span> *dst, <span class="keyword">char</span> <span class="keyword">const</span> *src )</span></span>;  </span><br></pre></td></tr></table></figure><p><code>strcat</code>函数要求 <code>dst</code> 参数原先已经包含了一个字符串(可以是空字符串)。它找到这个字符串的末尾，并把 <code>src</code> 字符串的一份副本添加到这个位置，返回结果为指向目标字符数组的指针。如果 <code>src</code> 和 <code>dst</code> 的位置发生重叠，其结果是未定义的。<br><strong>一个栗子</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> s1[<span class="number">100</span>] = <span class="string">&quot;123456&quot;</span>;</span><br><span class="line">    <span class="keyword">char</span> s2[] = <span class="string">&quot;890&quot;</span>;</span><br><span class="line">    <span class="built_in">strcat</span>(s1, s2);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; s1[i]; ++i)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>, s1[i]); <span class="comment">//输出 1234567890</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><hr><h2 id="字符串比较"><a href="#字符串比较" class="headerlink" title="字符串比较"></a>字符串比较</h2><p>库函数 <code>strcmp</code> 用于比较两个字符串，它的原型如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">strcmp</span><span class="params">( <span class="keyword">char</span> <span class="keyword">const</span> *s1, <span class="keyword">char</span> <span class="keyword">const</span> *s2 )</span></span>;</span><br></pre></td></tr></table></figure><p>如果 <code>s1</code> 小于 <code>s2</code>，<code>strcmp</code>函数返回一个小于零的值；如果 <code>s1</code> 大于 <code>s2</code>，函数返回一个大于零的值；如果两个字符串相等，函数就返回零。<br><strong>注意这里是词典比较，且相等是输出 0 而不是 1</strong><br><strong>一个栗子</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> s1[<span class="number">100</span>] = <span class="string">&quot;123456&quot;</span>;</span><br><span class="line">    <span class="keyword">char</span> s2[] = <span class="string">&quot;890&quot;</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, <span class="built_in">strcmp</span>(s1, s2)); <span class="comment">//输出 -1</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h1 id="长度受限的字符串函数"><a href="#长度受限的字符串函数" class="headerlink" title="长度受限的字符串函数"></a>长度受限的字符串函数</h1><p>标准库还包含了一些函数，它们以一种不同的方式处理字符串。这些函数接受一个显式的长度参数，用于限定进行复制或比较的字符数。这些函数提供了一种方便的机制，可以防止难以预料的长字符串从它们的目标数组溢出。<br>这些函数的原型如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">char</span> *<span class="title">strncpy</span><span class="params">( <span class="keyword">char</span> *dst, <span class="keyword">char</span> <span class="keyword">const</span> *src, <span class="keyword">size_t</span> len )</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">char</span> *<span class="title">strncat</span><span class="params">( <span class="keyword">char</span> *dst, <span class="keyword">char</span> <span class="keyword">const</span> *src, <span class="keyword">size_t</span> len )</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">strncmp</span><span class="params">( <span class="keyword">char</span> <span class="keyword">const</span> *s1, <span class="keyword">char</span> <span class="keyword">const</span> *s2, <span class="keyword">size_t</span> len )</span></span>;</span><br></pre></td></tr></table></figure><p>和 <code>strcpy</code> 一样，<code>strncpy</code>把源字符串的字符复制到目标数组。然而，它总是正好向 <code>dst</code> 写入 <code>len</code> 个字符。如果 <code>strlen( stc )</code> 的值小于 <code>len</code>，<code>dst</code> 数组就用额外的 <code>NUL</code> 字节填充到 <code>len</code> 长度；如果 <code>strlen( src )</code> 的值大于或等于 <code>len</code>，那么只有 <code>len</code> 个字符被复制到 <code>dst</code> 中。<strong>注意！它的结果将不会以 NUL 字节结尾。</strong></p><hr><h1 id="字符串查找函数"><a href="#字符串查找函数" class="headerlink" title="字符串查找函数"></a>字符串查找函数</h1><h2 id="查找一个字符"><a href="#查找一个字符" class="headerlink" title="查找一个字符"></a>查找一个字符</h2><p>在一个字符串中查找一个特定字符最容易的方法是使用 <code>strchr</code> 和 <code>strrchr</code> 函数，它们的原型如下所示：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">char</span> *<span class="title">strchr</span><span class="params">( <span class="keyword">char</span> <span class="keyword">const</span> *str, <span class="keyword">int</span> ch )</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">char</span> *<span class="title">strrchr</span><span class="params">( <span class="keyword">char</span> <span class="keyword">const</span> *str, <span class="keyword">int</span> ch )</span></span>;</span><br></pre></td></tr></table></figure><p>注意，它们的第 <strong>2</strong> 个参数是一个整型值。但是，它包含了一个字符值。<code>strchr</code> 在字符串 <code>str</code> 中查找字符 <code>ch</code> 第 <strong>1</strong> 次出现的位置，找到后函数返回一个指向该位置的指针。如果该字符并不存在于字符串中，函数就返回一个 <code>NULL</code> 指针。 <code>strrchr</code> 的功能和 <code>strchr</code> 基本一致，只是它所返回的是一个指向字符串该字符最后一次出现的位置（最右边那个）。<br><strong>一个栗子</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> <span class="built_in">string</span>[<span class="number">20</span>] = <span class="string">&quot;Hello there, honey.&quot;</span>;</span><br><span class="line">    <span class="keyword">char</span> *ans;</span><br><span class="line"></span><br><span class="line">    ans = <span class="built_in">strchr</span>( <span class="built_in">string</span>, <span class="string">&#x27;h&#x27;</span>);</span><br><span class="line">    <span class="keyword">while</span>(*ans)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>, *ans++); <span class="comment">//输出 here, honey.</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><hr><h2 id="查找任何几个字符"><a href="#查找任何几个字符" class="headerlink" title="查找任何几个字符"></a>查找任何几个字符</h2><p><code>strpbrk</code> 是个更为常见的函数。它并不是查找某个特定的字符，而是查找任何一组字符第一次在字符串中出现的位置。它的原型如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">char</span> *<span class="title">strpbrk</span><span class="params">( <span class="keyword">char</span> <span class="keyword">const</span> *str, <span class="keyword">char</span> <span class="keyword">const</span> *group )</span></span>;</span><br></pre></td></tr></table></figure><p>这个函数返回一个指向 <code>str</code> 中第 <strong>1</strong> 个匹配 <code>group</code> 中任何一个字符的字符位置。如果未找到匹配，函数返回一个 <code>NULL</code> 指针。<br><strong>一个栗子</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> <span class="built_in">string</span>[<span class="number">20</span>] = <span class="string">&quot;Hello there, honey.&quot;</span>;</span><br><span class="line">    <span class="keyword">char</span> *ans;</span><br><span class="line"></span><br><span class="line">    ans = <span class="built_in">strpbrk</span>( <span class="built_in">string</span>, <span class="string">&quot;aeiou&quot;</span>);</span><br><span class="line">    <span class="keyword">while</span>(*ans)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>, *ans++); <span class="comment">//输出 ello there, honey.</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><hr><h2 id="查找一个子串"><a href="#查找一个子串" class="headerlink" title="查找一个子串"></a>查找一个子串</h2><p>为了在字符串中查找一个子串，可以使用 <code>strstr</code> 函数，它的原型如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">char</span> *<span class="title">strstr</span><span class="params">( <span class="keyword">char</span> <span class="keyword">const</span> *s1, <span class="keyword">char</span> <span class="keyword">const</span> *s2 )</span></span>; </span><br></pre></td></tr></table></figure><p>这个函数在 <code>s1</code> 中查找整个 <code>s2</code> 第一次出现的起始位置，并返回一个指向该位置的指针。如果 <code>s2</code> 并没有完整地出现在 <code>s1</code> 的任何地方，函数将返回一个 <code>NULL</code> 指针。如果第 <strong>2</strong> 个参数是一个空字符串，函数就返回 <code>s1</code>。</p><hr><h2 id="查找一个字符串前缀"><a href="#查找一个字符串前缀" class="headerlink" title="查找一个字符串前缀"></a>查找一个字符串前缀</h2><p><code>strspn</code> 和 <code>strcspn</code> 函数用于在字符串的起始位置对字符计数。它们的原型如下所示：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">size_t</span> <span class="title">strspn</span><span class="params">( <span class="keyword">char</span> <span class="keyword">const</span> *str, <span class="keyword">char</span> <span class="keyword">const</span> *group )</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">size_t</span> <span class="title">strcspn</span><span class="params">( <span class="keyword">char</span> <span class="keyword">const</span> *str, <span class="keyword">char</span> <span class="keyword">const</span> *group )</span></span>;</span><br></pre></td></tr></table></figure><p><code>group</code> 字符串指定一个或多个字符。<code>strspn</code>返回 <code>str</code>起始部分匹配 <code>group</code> 中任意字符的字符数。<br><strong>一个栗子</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> len1, len2;</span><br><span class="line">    <span class="keyword">char</span> buffer[] = <span class="string">&quot;25,142,330,Smith,J,239-4123&quot;</span>;</span><br><span class="line">    len1 = <span class="built_in">strspn</span>( buffer, <span class="string">&quot;0123456789&quot;</span> ); <span class="comment">// 2</span></span><br><span class="line">    len2 = <span class="built_in">strspn</span>( buffer, <span class="string">&quot;,0123456789&quot;</span>); <span class="comment">// 11</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d %d\n&quot;</span>, len1, len2 ); <span class="comment">// 输出 2 11</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><hr><h2 id="查找标记"><a href="#查找标记" class="headerlink" title="查找标记"></a>查找标记</h2><p><code>strtok</code>函数从字符串中隔离各个单独的称为标记( token )的部分，并丢弃分隔符。它的原型如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">char</span> *<span class="title">strtok</span><span class="params">( <span class="keyword">char</span> *str, <span class="keyword">char</span> <span class="keyword">const</span> *sep )</span></span>;</span><br></pre></td></tr></table></figure><p><code>sep</code> 参数是个字符串，定义了用作分隔符的字符集合。第 <strong>1</strong> 参数指定一个字符串，它包含零个或多个由 <code>sep</code> 字符串中一个或多个分隔符分隔的标记。<code>strtok</code> 找到 <code>str</code> 的下一个标记，并将其用 <code>NUL</code> 结尾，然后返回一个指向这个标记的指针。<br><strong>一个栗子</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> whitespace[] = <span class="string">&quot; \t\f\r\v\n&quot;</span>;</span><br><span class="line">    <span class="keyword">char</span> *token;</span><br><span class="line">    <span class="keyword">char</span> line[] = <span class="string">&quot;Hello, nice to meet you.&quot;</span>;</span><br><span class="line">    <span class="keyword">for</span>( token = strtok( line, whitespace );</span><br><span class="line">        token != <span class="literal">NULL</span>;</span><br><span class="line">        token = strtok( <span class="literal">NULL</span>, whitespace))</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Next token is %s\n&quot;</span>, token );</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/8b01e407352d40adb5320e2f1aa5b23f.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAbmVmdV9jYnc=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="运行结果"></p>]]></content>
      
      
      <categories>
          
          <category> C </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C </tag>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C和指针学习笔记(一)——const常量</title>
      <link href="/2021/10/27/C-note-1/"/>
      <url>/2021/10/27/C-note-1/</url>
      
        <content type="html"><![CDATA[<blockquote><p>这个系列主要是我学习《C和指针》这本书的一些笔记，主要关于一些小的细节，目的是供自己学习和参考，详细地部分建议大家可以阅读一下《C和指针》这本书</p></blockquote><h1 id="一般情况"><a href="#一般情况" class="headerlink" title="一般情况"></a>一般情况</h1><p>我们在编程的过程中，可能会遇到一种量，它的值不会被改变，或者说我们不希望在之后的代码执行过程中改变这个值。<strong>C</strong> 中通过引入 <code>const</code> 修饰符来表示这种量，即常量。如果在代码的执行过程中修改了常量，那么编译器就会报错（暂且算是一种对数据自动的保护机制吧）。</p><span id="more"></span><p><strong>例如</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">100</span>; <span class="comment">//定义一个值为100的常量</span></span><br></pre></td></tr></table></figure><hr><h1 id="和指针联用"><a href="#和指针联用" class="headerlink" title="和指针联用"></a>和指针联用</h1><p>一般情况非常容易理解，但 <code>const</code> 修饰符也可以和指针联用来达到一些目的，会有以下三种情况</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> * point1;</span><br><span class="line"><span class="keyword">int</span> <span class="keyword">const</span> * point2;</span><br><span class="line"><span class="keyword">int</span> * <span class="keyword">const</span> point3;</span><br></pre></td></tr></table></figure><p>前面两种情况即 <code>point1</code> 和 <code>point2</code> 都表示指针指向的数据是只读的，但指针本身是可以更改的（改变其指向的地址）<br>最后一种情况，即 <code>point3</code> 表示指针本身是只读的（不可以改变其指向的地址），但指针指向的数据的值是可以改变的。<br><strong>一个具体的栗子</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> b = <span class="number">100</span>;</span><br><span class="line">    <span class="keyword">int</span> c = <span class="number">100</span>;</span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">int</span> a = <span class="number">100</span>;</span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">int</span> * point1;</span><br><span class="line">    <span class="keyword">int</span> <span class="keyword">const</span> * point2;</span><br><span class="line">    <span class="keyword">int</span> * <span class="keyword">const</span> point3 = &amp;b;</span><br><span class="line">    *point3 = <span class="number">101</span>;</span><br><span class="line">    point1 = &amp;a;</span><br><span class="line">    <span class="comment">// *point1 = 101; // 报错</span></span><br><span class="line">    b = <span class="number">101</span>;</span><br><span class="line">    <span class="comment">// point3 = &amp;c; // 报错</span></span><br><span class="line">    <span class="keyword">int</span> * <span class="keyword">const</span> point4 = &amp;a; <span class="comment">// 如果指向一个常量那么可以通过指针修改这个常量</span></span><br><span class="line">    *point4 = <span class="number">101</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, *point4); <span class="comment">// 输出 101</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, a); <span class="comment">//输出 101</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><hr><p>还可以用两个 <code>const</code> 表示一个指向常量的只读指针。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> * <span class="keyword">const</span> point5;</span><br><span class="line"><span class="keyword">int</span> <span class="keyword">const</span> * <span class="keyword">const</span> point6;</span><br></pre></td></tr></table></figure><hr><h1 id="const和函数形参"><a href="#const和函数形参" class="headerlink" title="const和函数形参"></a>const和函数形参</h1><p><code>const</code> 通常用在函数形参中，如果形参是一个指针，为了防止在指针内部修改指针指向的数据，就可以用 <code>const</code> 来限制<br><strong>例如C语言标准库，有很多参数的形参被const限制</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">size_t</span> <span class="title">strlen</span> <span class="params">( <span class="keyword">const</span> <span class="keyword">char</span> * str )</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">strcmp</span> <span class="params">( <span class="keyword">const</span> <span class="keyword">char</span> * str1, <span class="keyword">const</span> <span class="keyword">char</span> * str2 )</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">char</span> * <span class="title">strcat</span> <span class="params">( <span class="keyword">char</span> * destination, <span class="keyword">const</span> <span class="keyword">char</span> * source )</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">char</span> * <span class="title">strcpy</span> <span class="params">( <span class="keyword">char</span> * destination, <span class="keyword">const</span> <span class="keyword">char</span> * source )</span></span>;</span><br></pre></td></tr></table></figure><p>自己也可以使用 <code>const</code> 来限制形参。<br><strong>一个具体的栗子</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">output</span><span class="params">(<span class="keyword">const</span> <span class="keyword">int</span> * a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// *a = 101; // 报错</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, *a); <span class="comment">// 输出 100</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> b = <span class="number">100</span>;</span><br><span class="line">    output(&amp;b);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><hr><h1 id="const-和-非const-类型转换"><a href="#const-和-非const-类型转换" class="headerlink" title="const 和 非const 类型转换"></a>const 和 非const 类型转换</h1><p>当一个指针变量 <code>point1</code> 被 <code>const</code> 限制时，并且类似 <code>const int *point1</code> 这种形式，说明指针指向的数据不能被修改；如果将 <code>point1</code> 赋值给另外一个未被 <code>const</code> 修饰的指针变量 <code>point2</code>，就有可能发生危险。因为通过 <code>point1</code> 不能修改数据，而赋值后通过 <code>point2</code> 能够修改数据了，意义发生了转变，所以编译器不提倡这种行为，会给出错误或警告 (实测有的编译器并不会给出警报和错误，并且能正常运行，比如CB)。<br>也就是说，<code>const int * </code> 和 <code>int *</code> 是不同的类型，不能将 <code>const int *</code> 类型的数据赋值给 <code>int *</code> 类型的变量。但反过来是可以的，编译器允许将 <code>int *</code> 类型的数据赋值给 <code>const int *</code> 类型的变量。<br>这种限制很容易理解，<code>int *</code> 指向的数据有读取和写入权限，而 <code>const int *</code> 指向的数据只有读取权限，降低数据的权限不会带来任何问题，但提升数据的权限就有可能发生危险。<br>C语言标准库中很多函数的参数都被 <code>const</code> 限制了，但我们在以前的编码过程中并没有注意这个问题，经常将非 <code>const</code> 类型的数据传递给 <code>const</code> 类型的形参，这样做从未引发任何副作用，原因就是上面讲到的，将非 <code>const</code> 类型转换为 <code>const</code> 类型是允许的。</p><hr><p><strong>下面是一个将 const 类型赋值给非 const 类型的例子：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">output</span><span class="params">(<span class="keyword">int</span> * point2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    *point2 = <span class="number">101</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, *point2); <span class="comment">//输出101</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">int</span> b = <span class="number">100</span>;</span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">int</span> * point1 = &amp;b;</span><br><span class="line">    output(point1);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, b); <span class="comment">//输出101</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><hr><p><strong>参考博客</strong><br><a href="http://c.biancheng.net/view/2041.html">C语言const的用法详解，C语言常量定义详解</a></p>]]></content>
      
      
      <categories>
          
          <category> C </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C </tag>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>(=^_^=)</title>
      <link href="/2021/10/27/Welcom/"/>
      <url>/2021/10/27/Welcom/</url>
      
        <content type="html"><![CDATA[<h1 id="Welcom-to-my-blog-site"><a href="#Welcom-to-my-blog-site" class="headerlink" title="Welcom to my blog site !"></a>Welcom to my blog site !</h1>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
