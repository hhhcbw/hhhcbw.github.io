<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>JavaWeb书城项目(一)——表单验证的实现</title>
      <link href="/2021/10/30/JavaWeb_BookProject_1/"/>
      <url>/2021/10/30/JavaWeb_BookProject_1/</url>
      
        <content type="html"><![CDATA[<blockquote><p>表单验证主要使用JQuery实现，IDE为IDEA</p></blockquote><h1 id="导入项目"><a href="#导入项目" class="headerlink" title="导入项目"></a>导入项目</h1><p>新建一个模块<br><img src="https://img-blog.csdnimg.cn/087aef774e5f4e41aa97d612a5fa27a1.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAbmVmdV9jYnc=,size_20,color_FFFFFF,t_70,g_se,x_16" alt="新建模块"></p><span id="more"></span><p>把原有的文件导入，<a href="https://pan.baidu.com/share/init?surl=VhoiXQTMKeTCaNK6JTba4g">原有文件链接 提取码:nefu</a><br><img src="https://img-blog.csdnimg.cn/ccc1a7437bf7425f81461ec663e56400.png" alt="导入文件"><br>接下来我们要修改login.html以及regist.html<br><img src="https://img-blog.csdnimg.cn/943f53229aa646aea9d34d53e5087ab1.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAbmVmdV9jYnc=,size_12,color_FFFFFF,t_70,g_se,x_16" alt="login与regist"><br>把 <code>jquery.js</code> 放入<code>static/script</code> 文件夹下<br><img src="https://img-blog.csdnimg.cn/3352236662a749e1a5c3e7b853876238.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAbmVmdV9jYnc=,size_11,color_FFFFFF,t_70,g_se,x_16" alt="导入jquery.js"></p><hr><h1 id="regist"><a href="#regist" class="headerlink" title="regist"></a>regist</h1><p>我们要验证表单内容，主要有以下几个部分<br><img src="https://img-blog.csdnimg.cn/2cbfdfb17a364d1a8961f0dac2c21718.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAbmVmdV9jYnc=,size_17,color_FFFFFF,t_70,g_se,x_16" alt="注册表单"></p><ul><li>验证用户名：必须由字母，数字下划线组成，并且长度为5到12位</li><li>验证密码：必须由字母，数字下划线组成，并且长度为5到12位</li><li>验证确认密码：和密码相同</li><li>邮箱验证；<a href="mailto:&#120;&#x78;&#x78;&#120;&#120;&#64;&#120;&#x78;&#120;&#46;&#99;&#111;&#x6d;">&#120;&#x78;&#x78;&#120;&#120;&#64;&#120;&#x78;&#120;&#46;&#99;&#111;&#x6d;</a></li><li>验证码：现在只需要验证用户已输入</li></ul><p>具体大致流程如下：</p><ol><li><code>$(#id).val()</code> 获得表单项的值</li><li> <code>/ /</code> 创建正则项表达式</li><li>使用 <code>test</code> 方法测试</li><li><code>$(&quot;span.errorMsg&quot;).text(&quot;提示信息&quot;)</code> 提示用户</li></ol><p>以用户名为例，具体代码如下</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 验证用户名：必须由字母，数字下划线组成，并且长度为5到12位</span></span><br><span class="line"><span class="comment">//1 获取用户名输入框里的内容</span></span><br><span class="line"><span class="keyword">var</span> usernameText = $(<span class="string">&#x27;#username&#x27;</span>).val();</span><br><span class="line"><span class="comment">//2 创建正则表达式对象</span></span><br><span class="line"><span class="keyword">var</span> usernamePatt = <span class="regexp">/^\w&#123;5,12&#125;$/</span>;</span><br><span class="line"><span class="comment">//3 使用test方法验证</span></span><br><span class="line"><span class="keyword">if</span>(!usernamePatt.test(usernameText)) &#123;</span><br><span class="line"><span class="comment">//4 提示用户结果</span></span><br><span class="line">$(<span class="string">&quot;span.errorMsg&quot;</span>).text(<span class="string">&quot;用户名不合法！&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>; <span class="comment">// 让其不跳转</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>需要注意的是，全部验证完之后，不应该出现错误信息，所以使用 <code>$(&quot;span.errorMsg&quot;).text(&quot;&quot;)</code> 将其清空。<br><strong>regist.html 全部代码如下</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>尚硅谷会员注册页面<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;../../static/css/style.css&quot;</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;../../static/script/jquery-1.7.2.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript"><span class="comment">// 页面加载完成之后</span></span></span><br><span class="line"><span class="javascript">$(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">$(<span class="string">&quot;#sub_btn&quot;</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript"><span class="comment">// 验证用户名：必须由字母，数字下划线组成，并且长度为5到12位</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//1 获取用户名输入框里的内容</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> usernameText = $(<span class="string">&#x27;#username&#x27;</span>).val();</span></span><br><span class="line"><span class="javascript"><span class="comment">//2 创建正则表达式对象</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> usernamePatt = <span class="regexp">/^\w&#123;5,12&#125;$/</span>;</span></span><br><span class="line"><span class="javascript"><span class="comment">//3 使用test方法验证</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">if</span>(!usernamePatt.test(usernameText)) &#123;</span></span><br><span class="line"><span class="javascript"><span class="comment">//4 提示用户结果</span></span></span><br><span class="line"><span class="javascript">$(<span class="string">&quot;span.errorMsg&quot;</span>).text(<span class="string">&quot;用户名不合法！&quot;</span>);</span></span><br><span class="line"><span class="javascript"><span class="keyword">return</span> <span class="literal">false</span>; <span class="comment">// 让其不跳转</span></span></span><br><span class="line"><span class="javascript">&#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript"><span class="comment">// 验证密码：必须由字母，数字下划线组成，并且长度为5到12位</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//1 获取密码输入框里的内容</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> passwordText = $(<span class="string">&#x27;#password&#x27;</span>).val();</span></span><br><span class="line"><span class="javascript"><span class="comment">//2 创建正则表达式对象</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> passwordPatt = <span class="regexp">/^\w&#123;5,12&#125;$/</span>;</span></span><br><span class="line"><span class="javascript"><span class="comment">//3 使用test方法验证</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">if</span>(!passwordPatt.test(passwordText)) &#123;</span></span><br><span class="line"><span class="javascript"><span class="comment">//4 提示用户结果</span></span></span><br><span class="line"><span class="javascript">$(<span class="string">&quot;span.errorMsg&quot;</span>).text(<span class="string">&quot;密码不合法！&quot;</span>);</span></span><br><span class="line"><span class="javascript"><span class="keyword">return</span> <span class="literal">false</span>; <span class="comment">// 让其不跳转</span></span></span><br><span class="line"><span class="javascript">&#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript"><span class="comment">// 验证确认密码：和密码相同</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//1 获取确认密码内容</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> repwdText = $(<span class="string">&quot;#repwd&quot;</span>).val();</span></span><br><span class="line"><span class="javascript"><span class="comment">//2 与密码相比较</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">if</span>(repwdText != passwordText)&#123;</span></span><br><span class="line"><span class="javascript"><span class="comment">//3 提示用户</span></span></span><br><span class="line"><span class="javascript">$(<span class="string">&quot;span.errorMsg&quot;</span>).text(<span class="string">&quot;确认密码和密码不一致！&quot;</span>);</span></span><br><span class="line"><span class="javascript"><span class="keyword">return</span> <span class="literal">false</span>;</span></span><br><span class="line"><span class="javascript">&#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript"><span class="comment">// 邮箱验证；xxxxx@xxx.com</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//1 获取邮箱里的内容</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> emailText = $(<span class="string">&quot;#email&quot;</span>).val();</span></span><br><span class="line"><span class="javascript"><span class="comment">//2 创建正则表达式对象</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> emailPatt = <span class="regexp">/^[a-z\d]+(\.[a-z\d]+)*@([\da-z](-[\da-z])?)+(\.&#123;1,2&#125;[a-z]+)+$/</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//3 使用test方法测试</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">if</span>(!emailPatt.test(emailText)) &#123;</span></span><br><span class="line"><span class="javascript"><span class="comment">//4 提示用户</span></span></span><br><span class="line"><span class="javascript">$(<span class="string">&quot;span.errorMsg&quot;</span>).text(<span class="string">&quot;邮箱不合法！&quot;</span>);</span></span><br><span class="line"><span class="javascript"><span class="keyword">return</span> <span class="literal">false</span>;</span></span><br><span class="line"><span class="javascript">&#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript"><span class="comment">// 验证码：现在只需要验证用户已输入，因为还没讲到服务器，验证码生成。</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> codeText = $(<span class="string">&quot;#code&quot;</span>).val();</span></span><br><span class="line"><span class="javascript"><span class="comment">// alert(&quot;去空格前&quot;+codeText);</span></span></span><br><span class="line"><span class="javascript">codeText = $.trim(codeText); <span class="comment">// 去除多余的空格</span></span></span><br><span class="line"><span class="javascript"><span class="comment">// alert(&quot;去空格后&quot;+codeText);</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">if</span> (codeText == <span class="literal">null</span> || codeText == <span class="string">&quot;&quot;</span>)&#123;</span></span><br><span class="line"><span class="javascript"><span class="comment">// 提示用户</span></span></span><br><span class="line"><span class="javascript">$(<span class="string">&quot;span.errorMsg&quot;</span>).text(<span class="string">&quot;验证码不能为空！&quot;</span>);</span></span><br><span class="line"><span class="javascript"><span class="keyword">return</span> <span class="literal">false</span>;</span></span><br><span class="line"><span class="javascript">&#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">$(<span class="string">&quot;span.errorMsg&quot;</span>).text(<span class="string">&quot;&quot;</span>); <span class="comment">//合法将不合法信息去除</span></span></span><br><span class="line"><span class="javascript">&#125;);</span></span><br><span class="line"><span class="javascript">&#125;);</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css"><span class="selector-class">.login_form</span>&#123;</span></span><br><span class="line"><span class="css"><span class="attribute">height</span>:<span class="number">420px</span>;</span></span><br><span class="line"><span class="css"><span class="attribute">margin-top</span>: <span class="number">25px</span>;</span></span><br><span class="line"><span class="css">&#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;login_header&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">class</span>=<span class="string">&quot;logo_img&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> <span class="attr">src</span>=<span class="string">&quot;../../static/img/logo.gif&quot;</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;login_banner&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;l_content&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;login_word&quot;</span>&gt;</span>欢迎注册<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;content&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;login_form&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;login_box&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;tit&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>注册尚硅谷会员<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;errorMsg&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;regist_success.html&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">label</span>&gt;</span>用户名称：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">&quot;itxt&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入用户名&quot;</span> <span class="attr">autocomplete</span>=<span class="string">&quot;off&quot;</span> <span class="attr">tabindex</span>=<span class="string">&quot;1&quot;</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">id</span>=<span class="string">&quot;username&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">label</span>&gt;</span>用户密码：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">&quot;itxt&quot;</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入密码&quot;</span> <span class="attr">autocomplete</span>=<span class="string">&quot;off&quot;</span> <span class="attr">tabindex</span>=<span class="string">&quot;1&quot;</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">id</span>=<span class="string">&quot;password&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">label</span>&gt;</span>确认密码：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">&quot;itxt&quot;</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;确认密码&quot;</span> <span class="attr">autocomplete</span>=<span class="string">&quot;off&quot;</span> <span class="attr">tabindex</span>=<span class="string">&quot;1&quot;</span> <span class="attr">name</span>=<span class="string">&quot;repwd&quot;</span> <span class="attr">id</span>=<span class="string">&quot;repwd&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">label</span>&gt;</span>电子邮件：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">&quot;itxt&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入邮箱地址&quot;</span> <span class="attr">autocomplete</span>=<span class="string">&quot;off&quot;</span> <span class="attr">tabindex</span>=<span class="string">&quot;1&quot;</span> <span class="attr">name</span>=<span class="string">&quot;email&quot;</span> <span class="attr">id</span>=<span class="string">&quot;email&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">label</span>&gt;</span>验证码：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">&quot;itxt&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">style</span>=<span class="string">&quot;width: 150px;&quot;</span> <span class="attr">id</span>=<span class="string">&quot;code&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> <span class="attr">src</span>=<span class="string">&quot;../../static/img/code.bmp&quot;</span> <span class="attr">style</span>=<span class="string">&quot;float: right; margin-right: 40px&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;注册&quot;</span> <span class="attr">id</span>=<span class="string">&quot;sub_btn&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;bottom&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span></span><br><span class="line">尚硅谷书城.Copyright <span class="symbol">&amp;copy;</span>2015</span><br><span class="line"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>演示结果</strong><br><img src="https://img-blog.csdnimg.cn/a11b2ccd916943cbaa6b8dab05a66597.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAbmVmdV9jYnc=,size_20,color_FFFFFF,t_70,g_se,x_16" alt="结果"></p><hr><h1 id="login"><a href="#login" class="headerlink" title="login"></a>login</h1><p>login部分也是一样的思路，因为表单标签没有提供 <code>id</code>，我们要为其添加一个<code>id</code> 标签，即修改原始代码如下</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;username&quot;</span> <span class="attr">class</span>=<span class="string">&quot;itxt&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入用户名&quot;</span> <span class="attr">autocomplete</span>=<span class="string">&quot;off&quot;</span> <span class="attr">tabindex</span>=<span class="string">&quot;1&quot;</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;password&quot;</span> <span class="attr">class</span>=<span class="string">&quot;itxt&quot;</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入密码&quot;</span> <span class="attr">autocomplete</span>=<span class="string">&quot;off&quot;</span> <span class="attr">tabindex</span>=<span class="string">&quot;1&quot;</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><p>后面就和注册一样的思路，利用 <code>JQuery</code> 验证表单即可。<br><strong>login.html 全部代码如下</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>尚硅谷会员登录页面<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;../../static/css/style.css&quot;</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;../../static/script/jquery-1.7.2.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript"><span class="comment">// 页面加载完成之后</span></span></span><br><span class="line"><span class="javascript">$(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">$(<span class="string">&quot;#sub_btn&quot;</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript"><span class="comment">// 验证用户名：必须由字母，数字下划线组成，并且长度为5到12位</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//1 获取用户名输入框里的内容</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> usernameText = $(<span class="string">&quot;#username&quot;</span>).val();</span></span><br><span class="line"><span class="javascript"><span class="comment">//2 创建正则表达式对象</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> usernamePatt = <span class="regexp">/^\w&#123;5,12&#125;$/</span>;</span></span><br><span class="line"><span class="javascript"><span class="comment">//3 使用test方法验证</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">if</span>(!usernamePatt.test(usernameText)) &#123;</span></span><br><span class="line"><span class="javascript"><span class="comment">//4 提示用户结果</span></span></span><br><span class="line"><span class="javascript">$(<span class="string">&quot;span.errorMsg&quot;</span>).text(<span class="string">&quot;用户名不合法！&quot;</span>);</span></span><br><span class="line"><span class="javascript"><span class="keyword">return</span> <span class="literal">false</span>; <span class="comment">// 让其不跳转</span></span></span><br><span class="line"><span class="javascript">&#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript"><span class="comment">// 验证密码：必须由字母，数字下划线组成，并且长度为5到12位</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//1 获取密码输入框里的内容</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> passwordText = $(<span class="string">&quot;#password&quot;</span>).val();</span></span><br><span class="line"><span class="javascript"><span class="comment">//2 创建正则表达式对象</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> passwordPatt = <span class="regexp">/^\w&#123;5,12&#125;$/</span>;</span></span><br><span class="line"><span class="javascript"><span class="comment">//3 使用test方法验证</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">if</span>(!passwordPatt.test(passwordText)) &#123;</span></span><br><span class="line"><span class="javascript"><span class="comment">//4 提示用户结果</span></span></span><br><span class="line"><span class="javascript">$(<span class="string">&quot;span.errorMsg&quot;</span>).text(<span class="string">&quot;密码不合法！&quot;</span>);</span></span><br><span class="line"><span class="javascript"><span class="keyword">return</span> <span class="literal">false</span>; <span class="comment">// 让其不跳转</span></span></span><br><span class="line"><span class="javascript">&#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">$(<span class="string">&quot;span.errorMsg&quot;</span>).text(<span class="string">&quot;&quot;</span>); <span class="comment">//合法将不合法信息去除</span></span></span><br><span class="line"><span class="javascript">&#125;);</span></span><br><span class="line"><span class="javascript">&#125;);</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;login_header&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">class</span>=<span class="string">&quot;logo_img&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> <span class="attr">src</span>=<span class="string">&quot;../../static/img/logo.gif&quot;</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;login_banner&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;l_content&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;login_word&quot;</span>&gt;</span>欢迎登录<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;content&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;login_form&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;login_box&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;tit&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>尚硅谷会员<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;regist.html&quot;</span>&gt;</span>立即注册<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;msg_cont&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">b</span>&gt;</span><span class="tag">&lt;/<span class="name">b</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;errorMsg&quot;</span>&gt;</span>请输入用户名和密码<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;login_success.html&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">label</span>&gt;</span>用户名称：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;username&quot;</span> <span class="attr">class</span>=<span class="string">&quot;itxt&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入用户名&quot;</span> <span class="attr">autocomplete</span>=<span class="string">&quot;off&quot;</span></span></span><br><span class="line"><span class="tag">   <span class="attr">tabindex</span>=<span class="string">&quot;1&quot;</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">label</span>&gt;</span>用户密码：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;password&quot;</span> <span class="attr">class</span>=<span class="string">&quot;itxt&quot;</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入密码&quot;</span> <span class="attr">autocomplete</span>=<span class="string">&quot;off&quot;</span></span></span><br><span class="line"><span class="tag">   <span class="attr">tabindex</span>=<span class="string">&quot;1&quot;</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;登录&quot;</span> <span class="attr">id</span>=<span class="string">&quot;sub_btn&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;bottom&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span></span><br><span class="line">尚硅谷书城.Copyright <span class="symbol">&amp;copy;</span>2015</span><br><span class="line"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>演示结果</strong><br><img src="https://img-blog.csdnimg.cn/825385f7bb5947c4a97dd9d04e1ec1c0.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAbmVmdV9jYnc=,size_20,color_FFFFFF,t_70,g_se,x_16" alt="结果"></p>]]></content>
      
      
      <categories>
          
          <category> JavaWeb_Book_Project </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaWeb前端 </tag>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C和指针学习笔记(四)——字符操作</title>
      <link href="/2021/10/28/C-note-4/"/>
      <url>/2021/10/28/C-note-4/</url>
      
        <content type="html"><![CDATA[<blockquote><p>这个系列主要是我学习《C和指针》这本书的一些笔记，主要关于一些小的细节，目的是供自己学习和参考，详细地部分建议大家可以阅读一下《C和指针》这本书</p></blockquote><hr><p>根据定义，字符串由一个 <code>NUL</code> 字节结尾，所以字符串内部不能包含任何 <code>NUL</code> 字符。但是，非字符串数据内部包含零值的情况并不罕见。我们无法使用字符串函数来处理这种类型的数据，因为当它们遇到第 <strong>1</strong> 个 <code>NUL</code> 字节时将停止工作。<br>不过，我们可以使用另外一组相关的函数，它们的操作与字符串函数类似，但这些函数能够处理任意的字节序列。下面是它们的原型：</p><span id="more"></span><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> *<span class="title">memcpy</span><span class="params">( <span class="keyword">void</span> *dst, <span class="keyword">void</span> <span class="keyword">const</span> *src, <span class="keyword">size_t</span> length )</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> *<span class="title">memmove</span><span class="params">( <span class="keyword">void</span> *dst, <span class="keyword">void</span> <span class="keyword">const</span> *src, <span class="keyword">size_t</span> length )</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> *<span class="title">memcmp</span><span class="params">( <span class="keyword">void</span> <span class="keyword">const</span> *a, <span class="keyword">void</span> <span class="keyword">const</span> *b, <span class="keyword">size_t</span> length )</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> *<span class="title">memchr</span><span class="params">( <span class="keyword">void</span> <span class="keyword">const</span> *a, <span class="keyword">int</span> ch, <span class="keyword">size_t</span> length )</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> *<span class="title">memset</span><span class="params">( <span class="keyword">void</span> *a, <span class="keyword">int</span> ch, <span class="keyword">size_t</span> length )</span></span>;</span><br></pre></td></tr></table></figure><p>每个原型都包含一个显式的参数来说明需要处理的字节数。但和 <code>strn</code> 带头的函数不同，它们在遇到 <code>NUL</code> 字节时并不会停止操作。</p><hr><h1 id="memcpy"><a href="#memcpy" class="headerlink" title="memcpy"></a>memcpy</h1><p><code>memcpy</code> 从 <code>src</code> 的起始位置复制 <code>length</code> 个字节到 <code>dst</code> 的内存起始位置。可以用这种方式复制任何类型的值，第 <strong>3</strong> 个参数指定复制值的长度（以字节计）。如果 <code>src</code> 和 <code>dst</code> 以任何形式出现了重叠，它的结果是未定义的。<br><strong>例如</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">char</span> temp[SIZE], values[SIZE];</span><br><span class="line">...</span><br><span class="line"><span class="built_in">memcpy</span>( temp, values, SIZE );</span><br></pre></td></tr></table></figure><p>它从数组 <code>values</code> 复制 <code>SIZE</code> 个字节到数组 <code>temp</code>。<br>但是，如果两个数组都是整型数组该怎么办呢？下面的语句可以完成这项任务：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">memcpy</span>( temp, values, <span class="keyword">sizeof</span>( valies ) );</span><br></pre></td></tr></table></figure><p>前两个参数并不需要强制类型转换，因为在函数的原型中，参数的类型是 <code>void*</code> 型指针，而任何类型的指针都可以转换为 <code>void*</code> 型指针。<br>如果数组只有部分内容需要复制，那么需要复制的数量必须在第 <strong>3</strong> 个参数中指明。对于长度大于一个字节的数据，要确保把数量和数据类型的长度相乘，例如：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">memcpy</span>( saved_answers, answers, count * <span class="keyword">sizeof</span>( answers[<span class="number">0</span>] ) ); </span><br></pre></td></tr></table></figure><p>也可以用这种技巧复制结构或结构数组。</p><hr><h1 id="memmove"><a href="#memmove" class="headerlink" title="memmove"></a>memmove</h1><p> <code>memmove</code> 函数的行为和 <code>memcpy</code> 差不多，只是它的源操作数和目标操作数可以重叠。虽然它并不需要以下面这种方法实现，但 <code>memmove</code> 的结果和这种方法的结果相同：<strong>把源操作数复制到一个临时位置，这个临时位置不会与源或目标操作数重叠，然后再把它从这个临时位置复制到目标操作数</strong>。<br> <code>memmove</code>通常无法使用某些机器所提供的特殊的字节-字符串处理指令来实现，所以它可能比 <code>memcpy</code> 慢一些。但是，如果源和目标参数真的可能存在重叠，就应该使用 <code>memmove</code>，如下例所示：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">** Shift the values in the x array left one position.</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">memmove( x, x + <span class="number">1</span>, ( count - <span class="number">1</span> ) * <span class="keyword">sizeof</span>( x[ <span class="number">0</span> ] ) );</span><br></pre></td></tr></table></figure><hr><h1 id="memcmp"><a href="#memcmp" class="headerlink" title="memcmp"></a>memcmp</h1><p><code>memcmp</code> 对两段内存中的内容进行比较，这两段内存分别起始于 <code>a</code> 和 <code>b</code>，共比较 <code>length</code> 个字节。这些值按照无符号字符逐字节进行比较，函数的返回类型和 <code>strcmp</code> 函数一样——负值表示 <code>a</code> 小于 <code>b</code>，正值表示 <code>a</code> 大于 <code>b</code>，零表示 <code>a</code> 等于 <code>b</code>。由于这些值是根据一串无符号字节进行比较的，因此如果 <code>memcmp</code> 函数用于比较不是单字节的数据（如整数或浮点数），就可能给出不可预料的结果，</p><hr><h1 id="memchr"><a href="#memchr" class="headerlink" title="memchr"></a>memchr</h1><p><code>memchr</code> 从 <code>a</code> 的起始位置开始查找字符 <code>ch</code> 第 <strong>1</strong> 次出现的位置，并返回一个指向该位置的指针，它共查找 <code>length</code> 个字节。如果在这 <code>length</code> 个字节中未找到该字符，函数就返回一个 <code>NULL</code> 指针。</p><hr><h1 id="memset"><a href="#memset" class="headerlink" title="memset"></a>memset</h1><p><code>memset</code> 函数把从 <code>a</code> 开始的 <code>length</code> 个字节都设置为字符值 <code>ch</code>。例如:</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">memset</span>( buffer, <span class="number">0</span>, SIZE );</span><br></pre></td></tr></table></figure><p>把 <code>buffer</code>的前 <code>SIZE</code> 个字节都初始化为 <code>0</code>。</p>]]></content>
      
      
      <categories>
          
          <category> C </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C </tag>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C和指针学习笔记(三)——字符操作</title>
      <link href="/2021/10/28/C-note-3/"/>
      <url>/2021/10/28/C-note-3/</url>
      
        <content type="html"><![CDATA[<blockquote><p>这个系列主要是我学习《C和指针》这本书的一些笔记，主要关于一些小的细节，目的是供自己学习和参考，详细地部分建议大家可以阅读一下《C和指针》这本书</p></blockquote><hr><h1 id="字符分类"><a href="#字符分类" class="headerlink" title="字符分类"></a>字符分类</h1><p>每个分类函数接受一个包含字符值的整型参数。函数测试这个字符并返回一个整型值，表示真或假。下表列出了这些字符分类函数以及它们每个所执行的测试。</p><span id="more"></span><table><thead><tr><th>函数</th><th>如果它的参数符合下列条件就返回真</th></tr></thead><tbody><tr><td>iscntrl</td><td>任何控制字符</td></tr><tr><td>isspace</td><td>空白字符：空格’ ‘、换页 ‘\f’、换行’\n’、回车’\r’、制表符’\t’ 或垂直制表符’\v’</td></tr><tr><td>isdigit</td><td>十进制数字 0~9</td></tr><tr><td>isxdigit</td><td>十六进制数字，包括所有十进制数字、小写字母 a~f、大写字母 A~F</td></tr><tr><td>islower</td><td>小写字母 a~z</td></tr><tr><td>isupper</td><td>大写字母 A~Z</td></tr><tr><td>isalpha</td><td>字母 a~z 或 A~Z</td></tr><tr><td>isalnum</td><td>字母或数字 (a~z、A~Z 或 0~9)</td></tr><tr><td>ispunct</td><td>标点符号，任何不属于数字或字母的图形字符（可打印字符）</td></tr><tr><td>isgraph</td><td>任何图形字符</td></tr><tr><td>isprint</td><td>任何可打印字符，包括图形字符和空白字符</td></tr></tbody></table><h1 id="字符转换"><a href="#字符转换" class="headerlink" title="字符转换"></a>字符转换</h1><p>转换函数用于把大写字母转换为小写字母或者把小写字母转换为大写字母、</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">tolower</span><span class="params">( <span class="keyword">int</span> ch )</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">toupper</span><span class="params">( <span class="keyword">int</span> ch )</span></span>;</span><br></pre></td></tr></table></figure><p><code>toupper</code> 函数返回其参数的对应大写形式，<code>tolower</code> 函数返回其参数的对应小写形式。如果函数的参数并不是一个处于适当大小写状态的字符（即 <code>toupper</code> 的参数不是小写字母或 <code>tolower</code>的参数不是个大写字母），函数将不修改参数，而是直接返回。<br><strong>注意</strong><br>直接测试或操作字符会降低程序的可移植性。例如，考虑下面这条语句，它试图测试 <code>ch</code>是否是一个大写字符。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>( ch &gt;= <span class="string">&#x27;A&#x27;</span> &amp;&amp; ch &lt;= <span class="string">&#x27;Z&#x27;</span> )</span><br></pre></td></tr></table></figure><p>   这条语句在使用 <code>ASCII</code> 字符集的机器上能够运行，但在使用 <code>EBCDIC</code> 字符集的机器上将会失败。另外，下面这条语句</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>( <span class="built_in">isupper</span>( ch ) )</span><br></pre></td></tr></table></figure><p>无论机器使用哪个字符集，它都能顺利运行。</p>]]></content>
      
      
      <categories>
          
          <category> C </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C </tag>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C和指针学习笔记(二)——字符串常用库函数</title>
      <link href="/2021/10/28/C-note-2/"/>
      <url>/2021/10/28/C-note-2/</url>
      
        <content type="html"><![CDATA[<blockquote><p>这个系列主要是我学习《C和指针》这本书的一些笔记，主要关于一些小的细节，目的是供自己学习和参考，详细地部分建议大家可以阅读一下《C和指针》这本书</p></blockquote><hr><h1 id="字符串长度"><a href="#字符串长度" class="headerlink" title="字符串长度"></a>字符串长度</h1><p>库函数 <code>strlen</code> 的原型如下:</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">size_t</span> <span class="title">strlen</span><span class="params">( <span class="keyword">char</span> <span class="keyword">const</span> *<span class="built_in">string</span> )</span></span>;</span><br></pre></td></tr></table></figure><p>注意 <code>strlen</code> 返回一个类似为 <code>size_t</code> 的值。这个类型是在头文件 <code>stddef.h</code> 中定义的，它是一个无符号整数类型。在表达式中使用无符号数可能导致不可预料的结果。例如，下面两个表达式看上去是相等的：</p><span id="more"></span><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>( <span class="built_in">strlen</span>( x ) &gt;= <span class="built_in">strlen</span>( y ) ) ...</span><br><span class="line"><span class="keyword">if</span>( <span class="built_in">strlen</span>( x ) - <span class="built_in">strlen</span>( y ) &gt;= <span class="number">0</span> ) ...</span><br></pre></td></tr></table></figure><p>但事实上它们是不相等的。第 <strong>1</strong> 条语句将按照你预想的那样工作，但第 <strong>2</strong> 条语句的结果将永远是真。<code>strlen</code> 的结果是个无符号数，所以操作符 <code>&gt;=</code> 左边的表达式也将是无符号数，而无符号数绝不可能是负的。<br><strong>一个栗子</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> s[] = <span class="string">&quot;123456&quot;</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, <span class="built_in">strlen</span>(s)); <span class="comment">//输出6</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h1 id="不受限制的字符串函数"><a href="#不受限制的字符串函数" class="headerlink" title="不受限制的字符串函数"></a>不受限制的字符串函数</h1><p>最常用的字符串都是 “不受限制” 的，也就是说它们只是通过寻找字符串参数结尾的 <code>NUL</code> 字节来判断它的长度，这些函数一般都指定一块内存用于存放结果字符串。在使用这些函数时，程序员必须保证结果字符串不会溢出这块内存。</p><h2 id="复制字符串"><a href="#复制字符串" class="headerlink" title="复制字符串"></a>复制字符串</h2><p>用于复制字符串的函数是 <code>strcpy</code> ，它的原型如下所示：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">char</span> *<span class="title">strcpy</span><span class="params">( <span class="keyword">char</span> *dst, <span class="keyword">char</span> <span class="keyword">const</span> *src )</span></span>;</span><br></pre></td></tr></table></figure><p>这个函数把参数 <code>src</code> 字符串复制到 <code>dst</code> 参数，返回结果为一个指向目标字符数组的指针。如果参数 <code>src</code> 和 <code>dst</code> 在内存中出现重叠，其结果是未定义的。由于 <code>dst</code> 参数将进行修改，因此它必须是个字符数组或者是一个指向动态分配内存的数组的指针，不能使用字符串常量。<br><strong>需要注意目标字符数组的空间足以容纳需要复制的字符串。否则将会覆盖数组后面的内存空间的值。</strong><br><strong>一个栗子</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> s1[] = <span class="string">&quot;123456&quot;</span>;</span><br><span class="line">    <span class="keyword">char</span> s2[] = <span class="string">&quot;890&quot;</span>;</span><br><span class="line">    <span class="built_in">strcpy</span>(s1, s2);</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>; s1[i]; ++i)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>, s1[i]); <span class="comment">//输出 890</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><hr><h2 id="连接字符串"><a href="#连接字符串" class="headerlink" title="连接字符串"></a>连接字符串</h2><p>要想把一个字符串添加（连接）到另一个字符串的后面，可以使用 <code>strcat</code> 函数。它的原型如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">char</span> *<span class="title">strcat</span><span class="params">( <span class="keyword">char</span> *dst, <span class="keyword">char</span> <span class="keyword">const</span> *src )</span></span>;  </span><br></pre></td></tr></table></figure><p><code>strcat</code>函数要求 <code>dst</code> 参数原先已经包含了一个字符串(可以是空字符串)。它找到这个字符串的末尾，并把 <code>src</code> 字符串的一份副本添加到这个位置，返回结果为指向目标字符数组的指针。如果 <code>src</code> 和 <code>dst</code> 的位置发生重叠，其结果是未定义的。<br><strong>一个栗子</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> s1[<span class="number">100</span>] = <span class="string">&quot;123456&quot;</span>;</span><br><span class="line">    <span class="keyword">char</span> s2[] = <span class="string">&quot;890&quot;</span>;</span><br><span class="line">    <span class="built_in">strcat</span>(s1, s2);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; s1[i]; ++i)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>, s1[i]); <span class="comment">//输出 1234567890</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><hr><h2 id="字符串比较"><a href="#字符串比较" class="headerlink" title="字符串比较"></a>字符串比较</h2><p>库函数 <code>strcmp</code> 用于比较两个字符串，它的原型如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">strcmp</span><span class="params">( <span class="keyword">char</span> <span class="keyword">const</span> *s1, <span class="keyword">char</span> <span class="keyword">const</span> *s2 )</span></span>;</span><br></pre></td></tr></table></figure><p>如果 <code>s1</code> 小于 <code>s2</code>，<code>strcmp</code>函数返回一个小于零的值；如果 <code>s1</code> 大于 <code>s2</code>，函数返回一个大于零的值；如果两个字符串相等，函数就返回零。<br><strong>注意这里是词典比较，且相等是输出 0 而不是 1</strong><br><strong>一个栗子</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> s1[<span class="number">100</span>] = <span class="string">&quot;123456&quot;</span>;</span><br><span class="line">    <span class="keyword">char</span> s2[] = <span class="string">&quot;890&quot;</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, <span class="built_in">strcmp</span>(s1, s2)); <span class="comment">//输出 -1</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h1 id="长度受限的字符串函数"><a href="#长度受限的字符串函数" class="headerlink" title="长度受限的字符串函数"></a>长度受限的字符串函数</h1><p>标准库还包含了一些函数，它们以一种不同的方式处理字符串。这些函数接受一个显式的长度参数，用于限定进行复制或比较的字符数。这些函数提供了一种方便的机制，可以防止难以预料的长字符串从它们的目标数组溢出。<br>这些函数的原型如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">char</span> *<span class="title">strncpy</span><span class="params">( <span class="keyword">char</span> *dst, <span class="keyword">char</span> <span class="keyword">const</span> *src, <span class="keyword">size_t</span> len )</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">char</span> *<span class="title">strncat</span><span class="params">( <span class="keyword">char</span> *dst, <span class="keyword">char</span> <span class="keyword">const</span> *src, <span class="keyword">size_t</span> len )</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">strncmp</span><span class="params">( <span class="keyword">char</span> <span class="keyword">const</span> *s1, <span class="keyword">char</span> <span class="keyword">const</span> *s2, <span class="keyword">size_t</span> len )</span></span>;</span><br></pre></td></tr></table></figure><p>和 <code>strcpy</code> 一样，<code>strncpy</code>把源字符串的字符复制到目标数组。然而，它总是正好向 <code>dst</code> 写入 <code>len</code> 个字符。如果 <code>strlen( stc )</code> 的值小于 <code>len</code>，<code>dst</code> 数组就用额外的 <code>NUL</code> 字节填充到 <code>len</code> 长度；如果 <code>strlen( src )</code> 的值大于或等于 <code>len</code>，那么只有 <code>len</code> 个字符被复制到 <code>dst</code> 中。<strong>注意！它的结果将不会以 NUL 字节结尾。</strong></p><hr><h1 id="字符串查找函数"><a href="#字符串查找函数" class="headerlink" title="字符串查找函数"></a>字符串查找函数</h1><h2 id="查找一个字符"><a href="#查找一个字符" class="headerlink" title="查找一个字符"></a>查找一个字符</h2><p>在一个字符串中查找一个特定字符最容易的方法是使用 <code>strchr</code> 和 <code>strrchr</code> 函数，它们的原型如下所示：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">char</span> *<span class="title">strchr</span><span class="params">( <span class="keyword">char</span> <span class="keyword">const</span> *str, <span class="keyword">int</span> ch )</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">char</span> *<span class="title">strrchr</span><span class="params">( <span class="keyword">char</span> <span class="keyword">const</span> *str, <span class="keyword">int</span> ch )</span></span>;</span><br></pre></td></tr></table></figure><p>注意，它们的第 <strong>2</strong> 个参数是一个整型值。但是，它包含了一个字符值。<code>strchr</code> 在字符串 <code>str</code> 中查找字符 <code>ch</code> 第 <strong>1</strong> 次出现的位置，找到后函数返回一个指向该位置的指针。如果该字符并不存在于字符串中，函数就返回一个 <code>NULL</code> 指针。 <code>strrchr</code> 的功能和 <code>strchr</code> 基本一致，只是它所返回的是一个指向字符串该字符最后一次出现的位置（最右边那个）。<br><strong>一个栗子</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> <span class="built_in">string</span>[<span class="number">20</span>] = <span class="string">&quot;Hello there, honey.&quot;</span>;</span><br><span class="line">    <span class="keyword">char</span> *ans;</span><br><span class="line"></span><br><span class="line">    ans = <span class="built_in">strchr</span>( <span class="built_in">string</span>, <span class="string">&#x27;h&#x27;</span>);</span><br><span class="line">    <span class="keyword">while</span>(*ans)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>, *ans++); <span class="comment">//输出 here, honey.</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><hr><h2 id="查找任何几个字符"><a href="#查找任何几个字符" class="headerlink" title="查找任何几个字符"></a>查找任何几个字符</h2><p><code>strpbrk</code> 是个更为常见的函数。它并不是查找某个特定的字符，而是查找任何一组字符第一次在字符串中出现的位置。它的原型如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">char</span> *<span class="title">strpbrk</span><span class="params">( <span class="keyword">char</span> <span class="keyword">const</span> *str, <span class="keyword">char</span> <span class="keyword">const</span> *group )</span></span>;</span><br></pre></td></tr></table></figure><p>这个函数返回一个指向 <code>str</code> 中第 <strong>1</strong> 个匹配 <code>group</code> 中任何一个字符的字符位置。如果未找到匹配，函数返回一个 <code>NULL</code> 指针。<br><strong>一个栗子</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> <span class="built_in">string</span>[<span class="number">20</span>] = <span class="string">&quot;Hello there, honey.&quot;</span>;</span><br><span class="line">    <span class="keyword">char</span> *ans;</span><br><span class="line"></span><br><span class="line">    ans = <span class="built_in">strpbrk</span>( <span class="built_in">string</span>, <span class="string">&quot;aeiou&quot;</span>);</span><br><span class="line">    <span class="keyword">while</span>(*ans)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>, *ans++); <span class="comment">//输出 ello there, honey.</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><hr><h2 id="查找一个子串"><a href="#查找一个子串" class="headerlink" title="查找一个子串"></a>查找一个子串</h2><p>为了在字符串中查找一个子串，可以使用 <code>strstr</code> 函数，它的原型如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">char</span> *<span class="title">strstr</span><span class="params">( <span class="keyword">char</span> <span class="keyword">const</span> *s1, <span class="keyword">char</span> <span class="keyword">const</span> *s2 )</span></span>; </span><br></pre></td></tr></table></figure><p>这个函数在 <code>s1</code> 中查找整个 <code>s2</code> 第一次出现的起始位置，并返回一个指向该位置的指针。如果 <code>s2</code> 并没有完整地出现在 <code>s1</code> 的任何地方，函数将返回一个 <code>NULL</code> 指针。如果第 <strong>2</strong> 个参数是一个空字符串，函数就返回 <code>s1</code>。</p><hr><h2 id="查找一个字符串前缀"><a href="#查找一个字符串前缀" class="headerlink" title="查找一个字符串前缀"></a>查找一个字符串前缀</h2><p><code>strspn</code> 和 <code>strcspn</code> 函数用于在字符串的起始位置对字符计数。它们的原型如下所示：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">size_t</span> <span class="title">strspn</span><span class="params">( <span class="keyword">char</span> <span class="keyword">const</span> *str, <span class="keyword">char</span> <span class="keyword">const</span> *group )</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">size_t</span> <span class="title">strcspn</span><span class="params">( <span class="keyword">char</span> <span class="keyword">const</span> *str, <span class="keyword">char</span> <span class="keyword">const</span> *group )</span></span>;</span><br></pre></td></tr></table></figure><p><code>group</code> 字符串指定一个或多个字符。<code>strspn</code>返回 <code>str</code>起始部分匹配 <code>group</code> 中任意字符的字符数。<br><strong>一个栗子</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> len1, len2;</span><br><span class="line">    <span class="keyword">char</span> buffer[] = <span class="string">&quot;25,142,330,Smith,J,239-4123&quot;</span>;</span><br><span class="line">    len1 = <span class="built_in">strspn</span>( buffer, <span class="string">&quot;0123456789&quot;</span> ); <span class="comment">// 2</span></span><br><span class="line">    len2 = <span class="built_in">strspn</span>( buffer, <span class="string">&quot;,0123456789&quot;</span>); <span class="comment">// 11</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d %d\n&quot;</span>, len1, len2 ); <span class="comment">// 输出 2 11</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><hr><h2 id="查找标记"><a href="#查找标记" class="headerlink" title="查找标记"></a>查找标记</h2><p><code>strtok</code>函数从字符串中隔离各个单独的称为标记( token )的部分，并丢弃分隔符。它的原型如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">char</span> *<span class="title">strtok</span><span class="params">( <span class="keyword">char</span> *str, <span class="keyword">char</span> <span class="keyword">const</span> *sep )</span></span>;</span><br></pre></td></tr></table></figure><p><code>sep</code> 参数是个字符串，定义了用作分隔符的字符集合。第 <strong>1</strong> 参数指定一个字符串，它包含零个或多个由 <code>sep</code> 字符串中一个或多个分隔符分隔的标记。<code>strtok</code> 找到 <code>str</code> 的下一个标记，并将其用 <code>NUL</code> 结尾，然后返回一个指向这个标记的指针。<br><strong>一个栗子</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> whitespace[] = <span class="string">&quot; \t\f\r\v\n&quot;</span>;</span><br><span class="line">    <span class="keyword">char</span> *token;</span><br><span class="line">    <span class="keyword">char</span> line[] = <span class="string">&quot;Hello, nice to meet you.&quot;</span>;</span><br><span class="line">    <span class="keyword">for</span>( token = strtok( line, whitespace );</span><br><span class="line">        token != <span class="literal">NULL</span>;</span><br><span class="line">        token = strtok( <span class="literal">NULL</span>, whitespace))</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Next token is %s\n&quot;</span>, token );</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/8b01e407352d40adb5320e2f1aa5b23f.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAbmVmdV9jYnc=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="运行结果"></p>]]></content>
      
      
      <categories>
          
          <category> C </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C </tag>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C和指针学习笔记(一)——const常量</title>
      <link href="/2021/10/27/C-note-1/"/>
      <url>/2021/10/27/C-note-1/</url>
      
        <content type="html"><![CDATA[<blockquote><p>这个系列主要是我学习《C和指针》这本书的一些笔记，主要关于一些小的细节，目的是供自己学习和参考，详细地部分建议大家可以阅读一下《C和指针》这本书</p></blockquote><h1 id="一般情况"><a href="#一般情况" class="headerlink" title="一般情况"></a>一般情况</h1><p>我们在编程的过程中，可能会遇到一种量，它的值不会被改变，或者说我们不希望在之后的代码执行过程中改变这个值。<strong>C</strong> 中通过引入 <code>const</code> 修饰符来表示这种量，即常量。如果在代码的执行过程中修改了常量，那么编译器就会报错（暂且算是一种对数据自动的保护机制吧）。</p><span id="more"></span><p><strong>例如</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">100</span>; <span class="comment">//定义一个值为100的常量</span></span><br></pre></td></tr></table></figure><hr><h1 id="和指针联用"><a href="#和指针联用" class="headerlink" title="和指针联用"></a>和指针联用</h1><p>一般情况非常容易理解，但 <code>const</code> 修饰符也可以和指针联用来达到一些目的，会有以下三种情况</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> * point1;</span><br><span class="line"><span class="keyword">int</span> <span class="keyword">const</span> * point2;</span><br><span class="line"><span class="keyword">int</span> * <span class="keyword">const</span> point3;</span><br></pre></td></tr></table></figure><p>前面两种情况即 <code>point1</code> 和 <code>point2</code> 都表示指针指向的数据是只读的，但指针本身是可以更改的（改变其指向的地址）<br>最后一种情况，即 <code>point3</code> 表示指针本身是只读的（不可以改变其指向的地址），但指针指向的数据的值是可以改变的。<br><strong>一个具体的栗子</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> b = <span class="number">100</span>;</span><br><span class="line">    <span class="keyword">int</span> c = <span class="number">100</span>;</span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">int</span> a = <span class="number">100</span>;</span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">int</span> * point1;</span><br><span class="line">    <span class="keyword">int</span> <span class="keyword">const</span> * point2;</span><br><span class="line">    <span class="keyword">int</span> * <span class="keyword">const</span> point3 = &amp;b;</span><br><span class="line">    *point3 = <span class="number">101</span>;</span><br><span class="line">    point1 = &amp;a;</span><br><span class="line">    <span class="comment">// *point1 = 101; // 报错</span></span><br><span class="line">    b = <span class="number">101</span>;</span><br><span class="line">    <span class="comment">// point3 = &amp;c; // 报错</span></span><br><span class="line">    <span class="keyword">int</span> * <span class="keyword">const</span> point4 = &amp;a; <span class="comment">// 如果指向一个常量那么可以通过指针修改这个常量</span></span><br><span class="line">    *point4 = <span class="number">101</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, *point4); <span class="comment">// 输出 101</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, a); <span class="comment">//输出 101</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><hr><p>还可以用两个 <code>const</code> 表示一个指向常量的只读指针。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> * <span class="keyword">const</span> point5;</span><br><span class="line"><span class="keyword">int</span> <span class="keyword">const</span> * <span class="keyword">const</span> point6;</span><br></pre></td></tr></table></figure><hr><h1 id="const和函数形参"><a href="#const和函数形参" class="headerlink" title="const和函数形参"></a>const和函数形参</h1><p><code>const</code> 通常用在函数形参中，如果形参是一个指针，为了防止在指针内部修改指针指向的数据，就可以用 <code>const</code> 来限制<br><strong>例如C语言标准库，有很多参数的形参被const限制</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">size_t</span> <span class="title">strlen</span> <span class="params">( <span class="keyword">const</span> <span class="keyword">char</span> * str )</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">strcmp</span> <span class="params">( <span class="keyword">const</span> <span class="keyword">char</span> * str1, <span class="keyword">const</span> <span class="keyword">char</span> * str2 )</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">char</span> * <span class="title">strcat</span> <span class="params">( <span class="keyword">char</span> * destination, <span class="keyword">const</span> <span class="keyword">char</span> * source )</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">char</span> * <span class="title">strcpy</span> <span class="params">( <span class="keyword">char</span> * destination, <span class="keyword">const</span> <span class="keyword">char</span> * source )</span></span>;</span><br></pre></td></tr></table></figure><p>自己也可以使用 <code>const</code> 来限制形参。<br><strong>一个具体的栗子</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">output</span><span class="params">(<span class="keyword">const</span> <span class="keyword">int</span> * a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// *a = 101; // 报错</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, *a); <span class="comment">// 输出 100</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> b = <span class="number">100</span>;</span><br><span class="line">    output(&amp;b);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><hr><h1 id="const-和-非const-类型转换"><a href="#const-和-非const-类型转换" class="headerlink" title="const 和 非const 类型转换"></a>const 和 非const 类型转换</h1><p>当一个指针变量 <code>point1</code> 被 <code>const</code> 限制时，并且类似 <code>const int *point1</code> 这种形式，说明指针指向的数据不能被修改；如果将 <code>point1</code> 赋值给另外一个未被 <code>const</code> 修饰的指针变量 <code>point2</code>，就有可能发生危险。因为通过 <code>point1</code> 不能修改数据，而赋值后通过 <code>point2</code> 能够修改数据了，意义发生了转变，所以编译器不提倡这种行为，会给出错误或警告 (实测有的编译器并不会给出警报和错误，并且能正常运行，比如CB)。<br>也就是说，<code>const int * </code> 和 <code>int *</code> 是不同的类型，不能将 <code>const int *</code> 类型的数据赋值给 <code>int *</code> 类型的变量。但反过来是可以的，编译器允许将 <code>int *</code> 类型的数据赋值给 <code>const int *</code> 类型的变量。<br>这种限制很容易理解，<code>int *</code> 指向的数据有读取和写入权限，而 <code>const int *</code> 指向的数据只有读取权限，降低数据的权限不会带来任何问题，但提升数据的权限就有可能发生危险。<br>C语言标准库中很多函数的参数都被 <code>const</code> 限制了，但我们在以前的编码过程中并没有注意这个问题，经常将非 <code>const</code> 类型的数据传递给 <code>const</code> 类型的形参，这样做从未引发任何副作用，原因就是上面讲到的，将非 <code>const</code> 类型转换为 <code>const</code> 类型是允许的。</p><hr><p><strong>下面是一个将 const 类型赋值给非 const 类型的例子：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">output</span><span class="params">(<span class="keyword">int</span> * point2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    *point2 = <span class="number">101</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, *point2); <span class="comment">//输出101</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">int</span> b = <span class="number">100</span>;</span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">int</span> * point1 = &amp;b;</span><br><span class="line">    output(point1);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, b); <span class="comment">//输出101</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><hr><p><strong>参考博客</strong><br><a href="http://c.biancheng.net/view/2041.html">C语言const的用法详解，C语言常量定义详解</a></p>]]></content>
      
      
      <categories>
          
          <category> C </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C </tag>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>(=^_^=)</title>
      <link href="/2021/10/27/Welcom/"/>
      <url>/2021/10/27/Welcom/</url>
      
        <content type="html"><![CDATA[<h1 id="Welcom-to-my-blog-site"><a href="#Welcom-to-my-blog-site" class="headerlink" title="Welcom to my blog site !"></a>Welcom to my blog site !</h1>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
